
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+932 (git sha1 UNKNOWN, x86_64-w64-mingw32-g++ 7.3-posix -O3 -DNDEBUG)


-- Parsing `main.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: main.v
Parsing Verilog input from `main.v' to AST representation.
Generating RTLIL representation for module `\laRVa'.
Warning: Replacing memory \PCreg with list of registers. See laRVa.v:292
laRVa.v:64: Warning: Identifier `\irqstart' is implicitly declared.
Generating RTLIL representation for module `\UART_CORE'.
Generating RTLIL representation for module `\SPI_master'.
Generating RTLIL representation for module `\UART2_CORE'.
Generating RTLIL representation for module `\SYSTEM'.
system.v:235: Warning: Identifier `\gpoutcs' is implicitly declared.
Generating RTLIL representation for module `\ram32'.
Generating RTLIL representation for module `\pll'.
Generating RTLIL representation for module `\main'.
main.v:46: Warning: Identifier `\JY4' is implicitly declared.
main.v:78: Warning: Identifier `\XOE' is implicitly declared.
main.v:81: Warning: Identifier `\XD' is implicitly declared.
main.v:81: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:86: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:91: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:96: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:101: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:106: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:111: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:116: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:122: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:127: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:132: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:137: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:142: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:147: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:152: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:157: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -relut' --

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Finding top of design hierarchy..
root of   2 design levels: main                
root of   1 design levels: pll                 
root of   0 design levels: ram32               
root of   1 design levels: SYSTEM              
root of   0 design levels: UART2_CORE          
root of   0 design levels: SPI_master          
root of   0 design levels: UART_CORE           
root of   0 design levels: laRVa               
Automatically selected main as design top module.

2.2.2. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         \UART2_CORE
Used module:         \SPI_master
Used module:         \UART_CORE
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll
Parameter \BAUDBITS = 12

2.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\UART2_CORE'.
Parameter \BAUDBITS = 12
Generating RTLIL representation for module `$paramod\UART2_CORE\BAUDBITS=12'.
Parameter \BAUDBITS = 12

2.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\UART_CORE'.
Parameter \BAUDBITS = 12
Generating RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.

2.2.5. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         $paramod\UART2_CORE\BAUDBITS=12
Used module:         \SPI_master
Used module:         $paramod\UART_CORE\BAUDBITS=12
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll

2.2.6. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         $paramod\UART2_CORE\BAUDBITS=12
Used module:         \SPI_master
Used module:         $paramod\UART_CORE\BAUDBITS=12
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll
Removing unused module `\UART2_CORE'.
Removing unused module `\UART_CORE'.
Removed 2 unused modules.
Warning: Resizing cell port main.sys1.gpout from 4 bits to 32 bits.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `ram32.$proc$system.v:402$555'.
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$system.v:346$508 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:239$478 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:203$465 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$spi.v:58$362 in module SPI_master.
Marked 1 switch rules as full_case in process $proc$spi.v:47$358 in module SPI_master.
Marked 1 switch rules as full_case in process $proc$spi.v:38$352 in module SPI_master.
Marked 1 switch rules as full_case in process $proc$spi.v:29$349 in module SPI_master.
Removed 1 dead cases from process $proc$laRVa.v:276$250 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:276$250 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:314$239 in module laRVa.
Marked 2 switch rules as full_case in process $proc$laRVa.v:291$230 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:62$45 in module laRVa.
Removed a total of 1 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 7 redundant assignments.
Promoted 76 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\main.$proc$main.v:62$561'.
  Set init value: \cnt = 22'1111111111111111111111
Found init rule in `\SYSTEM.$proc$system.v:345$530'.
  Set init value: \irqen = 2'00
Found init rule in `\SYSTEM.$proc$system.v:257$529'.
  Set init value: \gpout = 0
Found init rule in `\SYSTEM.$proc$system.v:220$528'.
  Set init value: \tcount = 0
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$779'.
  Set init value: \cbrx = 4'1111
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$778'.
  Set init value: \ove = 1'0
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$777'.
  Set init value: \dv = 1'0
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$776'.
  Set init value: \divrx = 12'000000000000
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$775'.
  Set init value: \rrxd = 2'00
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$774'.
  Set init value: \divtx = 12'000000000000
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$773'.
  Set init value: \rdy = 1'1
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$772'.
  Set init value: \shtx = 9'111111111
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$771'.
  Set init value: \thre = 1'1
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$770'.
  Set init value: \divider = 12'000000000000
Found init rule in `\SPI_master.$proc$spi.v:54$416'.
  Set init value: \sin = 1'0
Found init rule in `\SPI_master.$proc$spi.v:44$415'.
  Set init value: \bitcnt = 6'000000
Found init rule in `\SPI_master.$proc$spi.v:36$414'.
  Set init value: \sck = 1'0
Found init rule in `\SPI_master.$proc$spi.v:26$413'.
  Set init value: \divcnt = 8'00000000
Found init rule in `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:98$734'.
  Set init value: \cbrx = 4'1111
Found init rule in `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:94$733'.
  Set init value: \ove = 1'0
Found init rule in `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:93$732'.
  Set init value: \dv = 1'0
Found init rule in `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:85$731'.
  Set init value: \divrx = 12'000000000000
Found init rule in `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:75$730'.
  Set init value: \rrxd = 2'00
Found init rule in `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:37$729'.
  Set init value: \divtx = 12'000000000000
Found init rule in `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:34$728'.
  Set init value: \rdy = 1'1
Found init rule in `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:32$727'.
  Set init value: \shtx = 9'111111111
Found init rule in `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:31$726'.
  Set init value: \thre = 1'1
Found init rule in `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:25$725'.
  Set init value: \divider = 12'000000000000
Found init rule in `\laRVa.$proc$laRVa.v:310$302'.
  Set init value: \mmode = 1'0
Found init rule in `\laRVa.$proc$laRVa.v:309$301'.
  Set init value: \q0 = 1'0
Found init rule in `\laRVa.$proc$laRVa.v:61$300'.
  Set init value: \opvalid = 1'0

2.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\SYSTEM.$proc$system.v:346$508'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:314$239'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:291$230'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:62$45'.

2.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\main.$proc$main.v:62$561'.
Creating decoders for process `\main.$proc$main.v:65$557'.
Creating decoders for process `\ram32.$proc$system.v:398$548'.
     1/1: $0\data_out[31:0]
Creating decoders for process `\ram32.$proc$system.v:391$535'.
     1/12: $0$memwr$\ram_array$system.v:392$531_EN[31:0]$538
     2/12: $0$memwr$\ram_array$system.v:392$531_DATA[31:0]$537
     3/12: $0$memwr$\ram_array$system.v:392$531_ADDR[10:0]$536
     4/12: $0$memwr$\ram_array$system.v:393$532_EN[31:0]$541
     5/12: $0$memwr$\ram_array$system.v:393$532_DATA[31:0]$540
     6/12: $0$memwr$\ram_array$system.v:393$532_ADDR[10:0]$539
     7/12: $0$memwr$\ram_array$system.v:394$533_EN[31:0]$544
     8/12: $0$memwr$\ram_array$system.v:394$533_DATA[31:0]$543
     9/12: $0$memwr$\ram_array$system.v:394$533_ADDR[10:0]$542
    10/12: $0$memwr$\ram_array$system.v:395$534_EN[31:0]$547
    11/12: $0$memwr$\ram_array$system.v:395$534_DATA[31:0]$546
    12/12: $0$memwr$\ram_array$system.v:395$534_ADDR[10:0]$545
Creating decoders for process `\SYSTEM.$proc$system.v:345$530'.
Creating decoders for process `\SYSTEM.$proc$system.v:257$529'.
Creating decoders for process `\SYSTEM.$proc$system.v:220$528'.
Creating decoders for process `\SYSTEM.$proc$system.v:353$512'.
     1/3: $0$memwr$\irqvect$system.v:353$462_EN[29:0]$515
     2/3: $0$memwr$\irqvect$system.v:353$462_DATA[29:0]$514
     3/3: $0$memwr$\irqvect$system.v:353$462_ADDR[1:0]$513
Creating decoders for process `\SYSTEM.$proc$system.v:346$508'.
     1/1: $0\irqen[1:0]
Creating decoders for process `\SYSTEM.$proc$system.v:295$497'.
     1/1: $0\spictl[13:0]
Creating decoders for process `\SYSTEM.$proc$system.v:258$479'.
     1/1: $0\gpout[31:0]
Creating decoders for process `\SYSTEM.$proc$system.v:239$478'.
     1/1: $0\iodo[31:0]
Creating decoders for process `\SYSTEM.$proc$system.v:221$468'.
Creating decoders for process `\SYSTEM.$proc$system.v:203$465'.
     1/1: $0\cdi[31:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$779'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$778'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$777'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$776'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$775'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$774'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$773'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$772'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$771'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$770'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$762'.
     1/6: $0\stopb[0:0]
     2/6: $0\rbr[7:0]
     3/6: $0\cbrx[3:0]
     4/6: $0\shrx[8:0]
     5/6: $0\ove[0:0]
     6/6: $0\dv[0:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$756'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$750'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$743'.
     1/5: $0\rdy[0:0]
     2/5: $0\cntbit[3:0]
     3/5: $0\shtx[8:0]
     4/5: $0\thr[7:0]
     5/5: $0\thre[0:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$737'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$735'.
     1/1: $0\divider[11:0]
Creating decoders for process `\SPI_master.$proc$spi.v:54$416'.
Creating decoders for process `\SPI_master.$proc$spi.v:44$415'.
Creating decoders for process `\SPI_master.$proc$spi.v:36$414'.
Creating decoders for process `\SPI_master.$proc$spi.v:26$413'.
Creating decoders for process `\SPI_master.$proc$spi.v:58$362'.
     1/25: $0\shreg[31:0] [31]
     2/25: $0\shreg[31:0] [30]
     3/25: $0\shreg[31:0] [29]
     4/25: $0\shreg[31:0] [28]
     5/25: $0\shreg[31:0] [27]
     6/25: $0\shreg[31:0] [26]
     7/25: $0\shreg[31:0] [25]
     8/25: $0\shreg[31:0] [24]
     9/25: $0\shreg[31:0] [23]
    10/25: $0\shreg[31:0] [22]
    11/25: $0\shreg[31:0] [21]
    12/25: $0\shreg[31:0] [20]
    13/25: $0\shreg[31:0] [19]
    14/25: $0\shreg[31:0] [18]
    15/25: $0\shreg[31:0] [17]
    16/25: $0\shreg[31:0] [16]
    17/25: $0\shreg[31:0] [15]
    18/25: $0\shreg[31:0] [14]
    19/25: $0\shreg[31:0] [13]
    20/25: $0\shreg[31:0] [12]
    21/25: $0\shreg[31:0] [11]
    22/25: $0\shreg[31:0] [10]
    23/25: $0\shreg[31:0] [9]
    24/25: $0\shreg[31:0] [8]
    25/25: $0\shreg[31:0] [7:0]
Creating decoders for process `\SPI_master.$proc$spi.v:55$361'.
Creating decoders for process `\SPI_master.$proc$spi.v:47$358'.
     1/1: $0\bitcnt[5:0]
Creating decoders for process `\SPI_master.$proc$spi.v:38$352'.
     1/1: $0\sck[0:0]
Creating decoders for process `\SPI_master.$proc$spi.v:29$349'.
     1/1: $0\divcnt[7:0]
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:98$734'.
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:94$733'.
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:93$732'.
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:85$731'.
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:75$730'.
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:37$729'.
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:34$728'.
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:32$727'.
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:31$726'.
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:25$725'.
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:103$717'.
     1/6: $0\stopb[0:0]
     2/6: $0\rbr[7:0]
     3/6: $0\cbrx[3:0]
     4/6: $0\shrx[8:0]
     5/6: $0\ove[0:0]
     6/6: $0\dv[0:0]
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:91$711'.
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:78$705'.
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:43$698'.
     1/5: $0\rdy[0:0]
     2/5: $0\cntbit[3:0]
     3/5: $0\shtx[8:0]
     4/5: $0\thr[7:0]
     5/5: $0\thre[0:0]
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:40$692'.
Creating decoders for process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:26$690'.
     1/1: $0\divider[11:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:310$302'.
Creating decoders for process `\laRVa.$proc$laRVa.v:309$301'.
Creating decoders for process `\laRVa.$proc$laRVa.v:61$300'.
Creating decoders for process `\laRVa.$proc$laRVa.v:32$269'.
Creating decoders for process `\laRVa.$proc$laRVa.v:276$250'.
     1/1: $1$mem2reg_rd$\PCreg$laRVa.v:277$16_DATA[29:0]$252
Creating decoders for process `\laRVa.$proc$laRVa.v:314$239'.
     1/2: $0\mmode[0:0]
     2/2: $0\q0[0:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:302$235'.
Creating decoders for process `\laRVa.$proc$laRVa.v:291$230'.
     1/2: $0\PCreg[1][29:0]
     2/2: $0\PCreg[0][29:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:69$51'.
Creating decoders for process `\laRVa.$proc$laRVa.v:62$45'.
     1/1: $0\opvalid[0:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:47$39'.
     1/3: $0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42
     2/3: $0$memwr$\regs$laRVa.v:48$32_DATA[31:0]$41
     3/3: $0$memwr$\regs$laRVa.v:48$32_ADDR[3:0]$40

2.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\SYSTEM.\iodo' from process `\SYSTEM.$proc$system.v:239$478'.
No latch inferred for signal `\SYSTEM.\cdi' from process `\SYSTEM.$proc$system.v:203$465'.
No latch inferred for signal `\laRVa.\i' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$17_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$17_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$18_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$18_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$19_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$19_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$20_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$20_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$21_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$21_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$22_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$22_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$23_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$23_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$24_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$24_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$25_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$25_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$26_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$26_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$27_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$27_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$28_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$28_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$29_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$29_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$30_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$30_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$31_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$31_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$mem2reg_rd$\PCreg$laRVa.v:277$16_DATA' from process `\laRVa.$proc$laRVa.v:276$250'.

2.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\main.\cnt' using process `\main.$proc$main.v:65$557'.
  created $dff cell `$procdff$1078' with positive edge clock.
Creating register for signal `\ram32.\data_out' using process `\ram32.$proc$system.v:398$548'.
  created $dff cell `$procdff$1079' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:392$531_ADDR' using process `\ram32.$proc$system.v:391$535'.
  created $dff cell `$procdff$1080' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:392$531_DATA' using process `\ram32.$proc$system.v:391$535'.
  created $dff cell `$procdff$1081' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:392$531_EN' using process `\ram32.$proc$system.v:391$535'.
  created $dff cell `$procdff$1082' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:393$532_ADDR' using process `\ram32.$proc$system.v:391$535'.
  created $dff cell `$procdff$1083' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:393$532_DATA' using process `\ram32.$proc$system.v:391$535'.
  created $dff cell `$procdff$1084' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:393$532_EN' using process `\ram32.$proc$system.v:391$535'.
  created $dff cell `$procdff$1085' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:394$533_ADDR' using process `\ram32.$proc$system.v:391$535'.
  created $dff cell `$procdff$1086' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:394$533_DATA' using process `\ram32.$proc$system.v:391$535'.
  created $dff cell `$procdff$1087' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:394$533_EN' using process `\ram32.$proc$system.v:391$535'.
  created $dff cell `$procdff$1088' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:395$534_ADDR' using process `\ram32.$proc$system.v:391$535'.
  created $dff cell `$procdff$1089' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:395$534_DATA' using process `\ram32.$proc$system.v:391$535'.
  created $dff cell `$procdff$1090' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:395$534_EN' using process `\ram32.$proc$system.v:391$535'.
  created $dff cell `$procdff$1091' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:353$462_ADDR' using process `\SYSTEM.$proc$system.v:353$512'.
  created $dff cell `$procdff$1092' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:353$462_DATA' using process `\SYSTEM.$proc$system.v:353$512'.
  created $dff cell `$procdff$1093' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:353$462_EN' using process `\SYSTEM.$proc$system.v:353$512'.
  created $dff cell `$procdff$1094' with positive edge clock.
Creating register for signal `\SYSTEM.\irqen' using process `\SYSTEM.$proc$system.v:346$508'.
  created $adff cell `$procdff$1095' with positive edge clock and positive level reset.
Creating register for signal `\SYSTEM.\spictl' using process `\SYSTEM.$proc$system.v:295$497'.
  created $dff cell `$procdff$1096' with positive edge clock.
Creating register for signal `\SYSTEM.\gpout' using process `\SYSTEM.$proc$system.v:258$479'.
  created $dff cell `$procdff$1097' with positive edge clock.
Creating register for signal `\SYSTEM.\tcount' using process `\SYSTEM.$proc$system.v:221$468'.
  created $dff cell `$procdff$1098' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\dv' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$762'.
  created $dff cell `$procdff$1099' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\ove' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$762'.
  created $dff cell `$procdff$1100' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\shrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$762'.
  created $dff cell `$procdff$1101' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rbr' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$762'.
  created $dff cell `$procdff$1102' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\stopb' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$762'.
  created $dff cell `$procdff$1103' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\cbrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$762'.
  created $dff cell `$procdff$1104' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rxst0' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$762'.
  created $dff cell `$procdff$1105' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$756'.
  created $dff cell `$procdff$1106' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rrxd' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$750'.
  created $dff cell `$procdff$1107' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\thre' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$743'.
  created $dff cell `$procdff$1108' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\thr' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$743'.
  created $dff cell `$procdff$1109' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\shtx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$743'.
  created $dff cell `$procdff$1110' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\cntbit' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$743'.
  created $dff cell `$procdff$1111' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rdy' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$743'.
  created $dff cell `$procdff$1112' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divtx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$737'.
  created $dff cell `$procdff$1113' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divider' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$735'.
  created $dff cell `$procdff$1114' with positive edge clock.
Creating register for signal `\SPI_master.\shreg' using process `\SPI_master.$proc$spi.v:58$362'.
  created $dff cell `$procdff$1115' with positive edge clock.
Creating register for signal `\SPI_master.\sin' using process `\SPI_master.$proc$spi.v:55$361'.
  created $dff cell `$procdff$1116' with positive edge clock.
Creating register for signal `\SPI_master.\bitcnt' using process `\SPI_master.$proc$spi.v:47$358'.
  created $dff cell `$procdff$1117' with positive edge clock.
Creating register for signal `\SPI_master.\sck' using process `\SPI_master.$proc$spi.v:38$352'.
  created $dff cell `$procdff$1118' with positive edge clock.
Creating register for signal `\SPI_master.\divcnt' using process `\SPI_master.$proc$spi.v:29$349'.
  created $dff cell `$procdff$1119' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\dv' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:103$717'.
  created $dff cell `$procdff$1120' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\ove' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:103$717'.
  created $dff cell `$procdff$1121' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\shrx' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:103$717'.
  created $dff cell `$procdff$1122' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\rbr' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:103$717'.
  created $dff cell `$procdff$1123' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\stopb' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:103$717'.
  created $dff cell `$procdff$1124' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\cbrx' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:103$717'.
  created $dff cell `$procdff$1125' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\rxst0' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:103$717'.
  created $dff cell `$procdff$1126' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\divrx' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:91$711'.
  created $dff cell `$procdff$1127' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\rrxd' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:78$705'.
  created $dff cell `$procdff$1128' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\thre' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:43$698'.
  created $dff cell `$procdff$1129' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\thr' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:43$698'.
  created $dff cell `$procdff$1130' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\shtx' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:43$698'.
  created $dff cell `$procdff$1131' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\cntbit' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:43$698'.
  created $dff cell `$procdff$1132' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\rdy' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:43$698'.
  created $dff cell `$procdff$1133' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\divtx' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:40$692'.
  created $dff cell `$procdff$1134' with positive edge clock.
Creating register for signal `$paramod\UART2_CORE\BAUDBITS=12.\divider' using process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:26$690'.
  created $dff cell `$procdff$1135' with positive edge clock.
Creating register for signal `\laRVa.\q0' using process `\laRVa.$proc$laRVa.v:314$239'.
  created $adff cell `$procdff$1136' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\mmode' using process `\laRVa.$proc$laRVa.v:314$239'.
  created $adff cell `$procdff$1137' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\PCci' using process `\laRVa.$proc$laRVa.v:302$235'.
  created $dff cell `$procdff$1138' with positive edge clock.
Creating register for signal `\laRVa.\PCreg[0]' using process `\laRVa.$proc$laRVa.v:291$230'.
  created $adff cell `$procdff$1139' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\PCreg[1]' using process `\laRVa.$proc$laRVa.v:291$230'.
  created $adff cell `$procdff$1140' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\IR' using process `\laRVa.$proc$laRVa.v:69$51'.
  created $dff cell `$procdff$1141' with positive edge clock.
Creating register for signal `\laRVa.\opvalid' using process `\laRVa.$proc$laRVa.v:62$45'.
  created $adff cell `$procdff$1142' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_ADDR' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$1143' with positive edge clock.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_DATA' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$1144' with positive edge clock.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_EN' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$1145' with positive edge clock.

2.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `main.$proc$main.v:62$561'.
Removing empty process `main.$proc$main.v:65$557'.
Found and cleaned up 1 empty switch in `\ram32.$proc$system.v:398$548'.
Removing empty process `ram32.$proc$system.v:398$548'.
Found and cleaned up 4 empty switches in `\ram32.$proc$system.v:391$535'.
Removing empty process `ram32.$proc$system.v:391$535'.
Removing empty process `SYSTEM.$proc$system.v:345$530'.
Removing empty process `SYSTEM.$proc$system.v:257$529'.
Removing empty process `SYSTEM.$proc$system.v:220$528'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:353$512'.
Removing empty process `SYSTEM.$proc$system.v:353$512'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:346$508'.
Removing empty process `SYSTEM.$proc$system.v:346$508'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:295$497'.
Removing empty process `SYSTEM.$proc$system.v:295$497'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:258$479'.
Removing empty process `SYSTEM.$proc$system.v:258$479'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:239$478'.
Removing empty process `SYSTEM.$proc$system.v:239$478'.
Removing empty process `SYSTEM.$proc$system.v:221$468'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:203$465'.
Removing empty process `SYSTEM.$proc$system.v:203$465'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$779'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$778'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$777'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$776'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$775'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$774'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$773'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$772'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$771'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$770'.
Found and cleaned up 4 empty switches in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$762'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$762'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$756'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$750'.
Found and cleaned up 5 empty switches in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$743'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$743'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$737'.
Found and cleaned up 1 empty switch in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$735'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$735'.
Removing empty process `SPI_master.$proc$spi.v:54$416'.
Removing empty process `SPI_master.$proc$spi.v:44$415'.
Removing empty process `SPI_master.$proc$spi.v:36$414'.
Removing empty process `SPI_master.$proc$spi.v:26$413'.
Found and cleaned up 2 empty switches in `\SPI_master.$proc$spi.v:58$362'.
Removing empty process `SPI_master.$proc$spi.v:58$362'.
Removing empty process `SPI_master.$proc$spi.v:55$361'.
Found and cleaned up 2 empty switches in `\SPI_master.$proc$spi.v:47$358'.
Removing empty process `SPI_master.$proc$spi.v:47$358'.
Found and cleaned up 2 empty switches in `\SPI_master.$proc$spi.v:38$352'.
Removing empty process `SPI_master.$proc$spi.v:38$352'.
Found and cleaned up 1 empty switch in `\SPI_master.$proc$spi.v:29$349'.
Removing empty process `SPI_master.$proc$spi.v:29$349'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:98$734'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:94$733'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:93$732'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:85$731'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:75$730'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:37$729'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:34$728'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:32$727'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:31$726'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:25$725'.
Found and cleaned up 4 empty switches in `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:103$717'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:103$717'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:91$711'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:78$705'.
Found and cleaned up 5 empty switches in `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:43$698'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:43$698'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:40$692'.
Found and cleaned up 1 empty switch in `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:26$690'.
Removing empty process `$paramod\UART2_CORE\BAUDBITS=12.$proc$uart2.v:26$690'.
Removing empty process `laRVa.$proc$laRVa.v:310$302'.
Removing empty process `laRVa.$proc$laRVa.v:309$301'.
Removing empty process `laRVa.$proc$laRVa.v:61$300'.
Removing empty process `laRVa.$proc$laRVa.v:32$269'.
Found and cleaned up 1 empty switch in `\laRVa.$proc$laRVa.v:276$250'.
Removing empty process `laRVa.$proc$laRVa.v:276$250'.
Removing empty process `laRVa.$proc$laRVa.v:314$239'.
Removing empty process `laRVa.$proc$laRVa.v:302$235'.
Found and cleaned up 2 empty switches in `\laRVa.$proc$laRVa.v:291$230'.
Removing empty process `laRVa.$proc$laRVa.v:291$230'.
Removing empty process `laRVa.$proc$laRVa.v:69$51'.
Removing empty process `laRVa.$proc$laRVa.v:62$45'.
Found and cleaned up 1 empty switch in `\laRVa.$proc$laRVa.v:47$39'.
Removing empty process `laRVa.$proc$laRVa.v:47$39'.
Cleaned up 42 empty switches.

2.4. Executing FLATTEN pass (flatten design).
Using template pll for cells of type pll.
Using template SYSTEM for cells of type SYSTEM.
Using template laRVa for cells of type laRVa.
Using template $paramod\UART2_CORE\BAUDBITS=12 for cells of type $paramod\UART2_CORE\BAUDBITS=12.
Using template SPI_master for cells of type SPI_master.
Using template $paramod\UART_CORE\BAUDBITS=12 for cells of type $paramod\UART_CORE\BAUDBITS=12.
Using template ram32 for cells of type ram32.
No more expansions possible.
Deleting now unused module pll.
Deleting now unused module ram32.
Deleting now unused module SYSTEM.
Deleting now unused module $paramod\UART_CORE\BAUDBITS=12.
Deleting now unused module SPI_master.
Deleting now unused module $paramod\UART2_CORE\BAUDBITS=12.
Deleting now unused module laRVa.

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 25 unused cells and 438 unused wires.

2.9. Executing CHECK pass (checking for obvious problems).
checking module main..
Warning: Wire main.\FSS is used but has no driver.
Warning: Wire main.\BME680_CS is used but has no driver.
Warning: Wire main.\sys1.uart2.rxd is used but has no driver.
Warning: Wire main.\sys1.uart2cs is used but has no driver.
found and reported 4 problems.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 31 cells.

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$procmux$807:
      Old ports: A=30'000000000000000000000000000000, B=30'111111111111111111111111111111, Y=$techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0]
      New connections: $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [29:1] = { $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:353$462_EN[29:0]$515 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$procmux$1072:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0]
      New connections: $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [31:1] = { $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$783:
      Old ports: A=0, B=255, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:392$531_EN[31:0]$538
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:392$531_EN[31:0]$538 [0]
      New connections: $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:392$531_EN[31:0]$538 [31:1] = { 24'000000000000000000000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:392$531_EN[31:0]$538 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:392$531_EN[31:0]$538 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:392$531_EN[31:0]$538 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:392$531_EN[31:0]$538 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:392$531_EN[31:0]$538 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:392$531_EN[31:0]$538 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:392$531_EN[31:0]$538 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$789:
      Old ports: A=0, B=65280, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:393$532_EN[31:0]$541
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:393$532_EN[31:0]$541 [8]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:393$532_EN[31:0]$541 [31:9] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:393$532_EN[31:0]$541 [7:0] } = { 16'0000000000000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:393$532_EN[31:0]$541 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:393$532_EN[31:0]$541 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:393$532_EN[31:0]$541 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:393$532_EN[31:0]$541 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:393$532_EN[31:0]$541 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:393$532_EN[31:0]$541 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:393$532_EN[31:0]$541 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$795:
      Old ports: A=0, B=16711680, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:394$533_EN[31:0]$544
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:394$533_EN[31:0]$544 [16]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:394$533_EN[31:0]$544 [31:17] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:394$533_EN[31:0]$544 [15:0] } = { 8'00000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:394$533_EN[31:0]$544 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:394$533_EN[31:0]$544 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:394$533_EN[31:0]$544 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:394$533_EN[31:0]$544 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:394$533_EN[31:0]$544 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:394$533_EN[31:0]$544 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:394$533_EN[31:0]$544 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$801:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:395$534_EN[31:0]$547
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:395$534_EN[31:0]$547 [24]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:395$534_EN[31:0]$547 [31:25] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:395$534_EN[31:0]$547 [23:0] } = { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:395$534_EN[31:0]$547 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:395$534_EN[31:0]$547 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:395$534_EN[31:0]$547 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:395$534_EN[31:0]$547 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:395$534_EN[31:0]$547 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:395$534_EN[31:0]$547 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:395$534_EN[31:0]$547 [24] 24'000000000000000000000000 }
  Optimizing cells in module \main.
Performed a total of 6 changes.

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \sys1.uart2.shtx = 9'111111111 to constant driver in module main.
Promoted 1 init specs to constant drivers.

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 31 unused wires.

2.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.9. Rerunning OPT passes. (Maybe there is more to do..)

2.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.16. Finished OPT passes. (There is nothing left to do.)

2.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$253 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$254 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$255 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$256 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$257 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$258 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$259 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$260 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$261 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$262 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$263 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$264 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$265 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$266 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$267 (sys1.cpu.regs).
Removed top 21 address bits (of 32) from memory init port main.$techmap\sys1.ram0.$meminit$\ram_array$system.v:404$550 (sys1.ram0.ram_array).
Removed top 31 bits (of 32) from port B of cell main.$sub$main.v:65$558 ($sub).
Removed top 9 bits (of 32) from port Y of cell main.$sub$main.v:65$558 ($sub).
Removed top 10 bits (of 32) from mux cell main.$ternary$main.v:65$560 ($mux).
Removed top 29 bits (of 30) from FF cell main.$techmap\sys1.$procdff$1094 ($dff).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.$procmux$833_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell main.$techmap\sys1.$procmux$828_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell main.$techmap\sys1.$procmux$827_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell main.$techmap\sys1.$procmux$826_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$825_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$824_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.$procmux$822_CMP0 ($eq).
Removed cell main.$techmap\sys1.$procmux$811 ($mux).
Removed cell main.$techmap\sys1.$procmux$809 ($mux).
Removed cell main.$techmap\sys1.$ternary$system.v:362$521 ($mux).
Removed top 2 bits (of 3) from port B of cell main.$techmap\sys1.$eq$system.v:232$472 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.$add$system.v:221$469 ($add).
Removed top 31 bits (of 32) from FF cell main.$techmap\sys1.cpu.$procdff$1145 ($dff).
Removed cell main.$techmap\sys1.cpu.$procmux$1076 ($mux).
Removed cell main.$techmap\sys1.cpu.$procmux$1074 ($mux).
Removed top 2 bits (of 32) from port Y of cell main.$techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
Removed top 2 bits (of 32) from port B of cell main.$techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:287$225 ($mux).
Removed top 2 bits (of 4) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:250$202 ($mux).
Removed top 27 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:217$186 ($mux).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:212$185 ($eq).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:181$161 ($mux).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:180$158 ($mux).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:126$118 ($eq).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:126$116 ($eq).
Removed top 2 bits (of 12) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:100$101 ($eq).
Removed top 2 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:100$99 ($eq).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:99$97 ($eq).
Removed top 2 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:89$74 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:88$72 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:84$64 ($eq).
Removed top 5 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:83$62 ($eq).
Removed top 2 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:82$60 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:81$58 ($eq).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:78$57 ($mux).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:77$55 ($mux).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:76$53 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart2.v:109$721 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart2.v:109$721 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart2.v:91$715 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart2.v:91$713 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart2.v:91$713 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart2.$eq$uart2.v:88$709 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$add$uart2.v:62$702 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$add$uart2.v:62$702 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart2.v:41$697 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart2.v:41$696 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart2.v:41$694 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart2.v:41$694 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$sub$spi.v:88$411 ($sub).
Removed top 25 bits (of 32) from port Y of cell main.$techmap\sys1.spi0.$sub$spi.v:88$411 ($sub).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:85$409 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:84$407 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:83$405 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:82$403 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:81$401 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:80$399 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:79$397 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:78$395 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:77$393 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:76$391 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:75$389 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:74$387 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:73$385 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:72$383 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:71$381 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:70$379 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:69$377 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:68$375 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:67$373 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:66$371 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:65$369 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:64$367 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:63$365 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$gt$spi.v:62$363 ($gt).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$sub$spi.v:49$360 ($sub).
Removed top 26 bits (of 32) from port Y of cell main.$techmap\sys1.spi0.$sub$spi.v:49$360 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spi0.$sub$spi.v:31$351 ($sub).
Removed top 24 bits (of 32) from port Y of cell main.$techmap\sys1.spi0.$sub$spi.v:31$351 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:110$766 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:110$766 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:92$760 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:92$758 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:92$758 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart0.$eq$uart.v:89$754 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$add$uart.v:63$747 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$add$uart.v:63$747 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:42$742 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:42$741 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:42$739 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:42$739 ($sub).
Removed top 7 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1091 ($dff).
Removed top 8 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1088 ($dff).
Removed top 16 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1085 ($dff).
Removed top 24 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1082 ($dff).
Removed cell main.$techmap\sys1.ram0.$procmux$805 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$803 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$799 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$797 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$793 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$791 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$787 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$785 ($mux).
Removed top 1 bits (of 23) from port Y of cell main.$sub$main.v:65$558 ($sub).
Removed top 7 bits (of 24) from FF cell main.$techmap\sys1.ram0.$procdff$1088 ($dff).
Removed top 7 bits (of 16) from FF cell main.$techmap\sys1.ram0.$procdff$1085 ($dff).
Removed top 7 bits (of 8) from FF cell main.$techmap\sys1.ram0.$procdff$1082 ($dff).
Removed top 10 bits (of 32) from wire main.$sub$main.v:65$558_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:180$158_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:181$161_Y.
Removed top 2 bits (of 4) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:250$202_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:287$225_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:77$55_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:78$57_Y.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:392$531_DATA[31:0]$537.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:392$531_EN[31:0]$538.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:393$532_DATA[31:0]$540.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:393$532_EN[31:0]$541.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:394$533_DATA[31:0]$543.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:394$533_EN[31:0]$544.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:392$531_EN.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:393$532_EN.
Removed top 7 bits (of 11) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:394$533_ADDR.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:394$533_EN.
Removed top 7 bits (of 11) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:395$534_ADDR.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.spi0.$sub$spi.v:31$351_Y.
Removed top 26 bits (of 32) from wire main.$techmap\sys1.spi0.$sub$spi.v:49$360_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.uart0.$add$uart.v:63$747_Y.
Removed top 20 bits (of 32) from wire main.$techmap\sys1.uart0.$sub$uart.v:42$739_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.uart2.$add$uart2.v:62$702_Y.
Removed top 20 bits (of 32) from wire main.$techmap\sys1.uart2.$sub$uart2.v:41$694_Y.
Removed top 25 bits (of 30) from wire main.sys1.cpu.ivector.
Removed top 1 bits (of 5) from wire main.sys1.cpu.rs1.
Removed top 1 bits (of 5) from wire main.sys1.cpu.rs2.
Removed top 23 bits (of 32) from wire main.sys1.spi0.dout.
Removed top 23 bits (of 32) from wire main.sys1.spi0.shreg.

2.12. Executing PEEPOPT pass (run peephole optimizers).

2.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 51 unused wires.

2.14. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module main that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\sys1.ram0.$memrd$\ram_array$system.v:399$549 ($memrd):
    Found 1 activation_patterns using ctrl signal \sys1.iramcs.
    No candidates found.
  Analyzing resource sharing options for $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y.
    Found 1 candidates: $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34
    Analyzing resource sharing with $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd):
      Found 3 activation_patterns using ctrl signal { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y }.
      Forbidden control signals for this pair of cells: { \sys1.ram0.wrlanes \sys1.uart0.wrtx \sys1.uart0.wrbaud \sys1.uart0.rd $techmap\sys1.uart0.$and$uart.v:42$738_Y \sys1.spi0.wr $techmap\sys1.spi0.$or$spi.v:30$350_Y \sys1.uart2.wrtx \sys1.uart2.wrbaud \sys1.uart2.rd $techmap\sys1.uart2.$and$uart2.v:41$693_Y \sys1.cpu.jump \sys1.cpu.aluIn2 [4:0] \sys1.cpu.aluAdder [1:0] $techmap\sys1.cpu.$xor$laRVa.v:131$131_Y $techmap\sys1.cpu.$and$laRVa.v:283$219_Y \sys1.iramcs \sys1.spitx $techmap\sys1.$eq$system.v:234$474_Y \sys1.gpoutcs $techmap\sys1.$eq$system.v:235$476_Y $techmap\sys1.$and$system.v:348$511_Y $techmap\sys1.$and$system.v:353$518_Y $techmap\sys1.$procmux$822_CMP $techmap\sys1.$procmux$824_CMP $techmap\sys1.$procmux$825_CMP $techmap\sys1.$procmux$826_CMP $techmap\sys1.$procmux$827_CMP $techmap\sys1.$procmux$832_CMP $techmap\sys1.$procmux$828_CMP $techmap\sys1.$procmux$829_CMP $techmap\sys1.$procmux$833_CMP }
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37: $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y = 1'1
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y } = 2'11
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { \sys1.cpu.oplui \sys1.cpu.opauipc $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y } = 3'001
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y } = 3'111
      Size of SAT problem: 19 cells, 235 variables, 612 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y } = 7'0000110
  Analyzing resource sharing options for $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd):
    Found 3 activation_patterns using ctrl signal { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y }.
    No candidates found.
  Analyzing resource sharing options for $techmap\sys1.$memrd$\irqvect$system.v:363$524 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\sys1.cpu.$and$laRVa.v:296$233_Y.
    No candidates found.

2.15. Executing TECHMAP pass (map to technology primitives).

2.15.1. Executing Verilog-2005 frontend: C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/cmp2lut.v
Parsing Verilog input from `C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.15.2. Continuing TECHMAP pass.
No more expansions possible.

2.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module main:
  creating $macc model for $sub$main.v:65$558 ($sub).
  creating $macc model for $techmap\sys1.$add$system.v:221$469 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$129 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$130 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:217$187 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:288$227 ($add).
  creating $macc model for $techmap\sys1.spi0.$sub$spi.v:31$351 ($sub).
  creating $macc model for $techmap\sys1.spi0.$sub$spi.v:49$360 ($sub).
  creating $macc model for $techmap\sys1.spi0.$sub$spi.v:88$411 ($sub).
  creating $macc model for $techmap\sys1.uart0.$add$uart.v:63$747 ($add).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:110$766 ($sub).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:42$739 ($sub).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:92$758 ($sub).
  creating $macc model for $techmap\sys1.uart2.$add$uart2.v:62$702 ($add).
  creating $macc model for $techmap\sys1.uart2.$sub$uart2.v:109$721 ($sub).
  creating $macc model for $techmap\sys1.uart2.$sub$uart2.v:41$694 ($sub).
  creating $macc model for $techmap\sys1.uart2.$sub$uart2.v:91$713 ($sub).
  merging $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$129 into $techmap\sys1.cpu.$add$laRVa.v:130$130.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart2.v:41$694.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart2.v:109$721.
  creating $alu model for $macc $techmap\sys1.uart2.$add$uart2.v:62$702.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:92$758.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:42$739.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:110$766.
  creating $alu model for $macc $techmap\sys1.uart0.$add$uart.v:63$747.
  creating $alu model for $macc $techmap\sys1.spi0.$sub$spi.v:88$411.
  creating $alu model for $macc $techmap\sys1.spi0.$sub$spi.v:49$360.
  creating $alu model for $macc $techmap\sys1.spi0.$sub$spi.v:31$351.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:288$227.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:287$226.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:217$187.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:130$130.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart2.v:91$713.
  creating $alu model for $macc $techmap\sys1.$add$system.v:221$469.
  creating $alu model for $macc $sub$main.v:65$558.
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:62$363 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:63$365 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:64$367 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:65$369 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:66$371 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:67$373 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:68$375 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:69$377 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:70$379 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:71$381 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:72$383 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:73$385 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:74$387 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:75$389 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:76$391 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:77$393 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:78$395 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:79$397 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:80$399 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:81$401 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:82$403 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:83$405 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:84$407 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi0.$gt$spi.v:85$409 ($gt): new $alu
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:85$409: $auto$alumacc.cc:485:replace_alu$1199
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:84$407: $auto$alumacc.cc:485:replace_alu$1204
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:83$405: $auto$alumacc.cc:485:replace_alu$1209
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:82$403: $auto$alumacc.cc:485:replace_alu$1214
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:81$401: $auto$alumacc.cc:485:replace_alu$1219
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:80$399: $auto$alumacc.cc:485:replace_alu$1224
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:79$397: $auto$alumacc.cc:485:replace_alu$1229
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:78$395: $auto$alumacc.cc:485:replace_alu$1234
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:77$393: $auto$alumacc.cc:485:replace_alu$1239
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:76$391: $auto$alumacc.cc:485:replace_alu$1244
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:75$389: $auto$alumacc.cc:485:replace_alu$1249
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:74$387: $auto$alumacc.cc:485:replace_alu$1254
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:73$385: $auto$alumacc.cc:485:replace_alu$1259
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:72$383: $auto$alumacc.cc:485:replace_alu$1264
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:71$381: $auto$alumacc.cc:485:replace_alu$1269
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:70$379: $auto$alumacc.cc:485:replace_alu$1274
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:69$377: $auto$alumacc.cc:485:replace_alu$1279
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:68$375: $auto$alumacc.cc:485:replace_alu$1284
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:67$373: $auto$alumacc.cc:485:replace_alu$1289
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:66$371: $auto$alumacc.cc:485:replace_alu$1294
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:65$369: $auto$alumacc.cc:485:replace_alu$1299
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:64$367: $auto$alumacc.cc:485:replace_alu$1304
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:63$365: $auto$alumacc.cc:485:replace_alu$1309
  creating $alu cell for $techmap\sys1.spi0.$gt$spi.v:62$363: $auto$alumacc.cc:485:replace_alu$1314
  creating $alu cell for $sub$main.v:65$558: $auto$alumacc.cc:485:replace_alu$1319
  creating $alu cell for $techmap\sys1.$add$system.v:221$469: $auto$alumacc.cc:485:replace_alu$1322
  creating $alu cell for $techmap\sys1.uart2.$sub$uart2.v:91$713: $auto$alumacc.cc:485:replace_alu$1325
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:130$130: $auto$alumacc.cc:485:replace_alu$1328
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:217$187: $auto$alumacc.cc:485:replace_alu$1331
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:287$226: $auto$alumacc.cc:485:replace_alu$1334
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:288$227: $auto$alumacc.cc:485:replace_alu$1337
  creating $alu cell for $techmap\sys1.spi0.$sub$spi.v:31$351: $auto$alumacc.cc:485:replace_alu$1340
  creating $alu cell for $techmap\sys1.spi0.$sub$spi.v:49$360: $auto$alumacc.cc:485:replace_alu$1343
  creating $alu cell for $techmap\sys1.spi0.$sub$spi.v:88$411: $auto$alumacc.cc:485:replace_alu$1346
  creating $alu cell for $techmap\sys1.uart0.$add$uart.v:63$747: $auto$alumacc.cc:485:replace_alu$1349
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:110$766: $auto$alumacc.cc:485:replace_alu$1352
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:42$739: $auto$alumacc.cc:485:replace_alu$1355
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:92$758: $auto$alumacc.cc:485:replace_alu$1358
  creating $alu cell for $techmap\sys1.uart2.$add$uart2.v:62$702: $auto$alumacc.cc:485:replace_alu$1361
  creating $alu cell for $techmap\sys1.uart2.$sub$uart2.v:109$721: $auto$alumacc.cc:485:replace_alu$1364
  creating $alu cell for $techmap\sys1.uart2.$sub$uart2.v:41$694: $auto$alumacc.cc:485:replace_alu$1367
  created 41 $alu and 0 $macc cells.

2.19. Executing OPT pass (performing simple optimizations).

2.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 3 cells.

2.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 1 unused cells and 28 unused wires.

2.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.9. Rerunning OPT passes. (Maybe there is more to do..)

2.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.16. Finished OPT passes. (There is nothing left to do.)

2.20. Executing FSM pass (extract and optimize FSM).

2.20.1. Executing FSM_DETECT pass (finding FSMs in design).

2.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.21.5. Finished fast OPT passes.

2.22. Executing MEMORY pass.

2.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\sys1.$memwr$\irqvect$system.v:353$527' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.cpu.$memwr$\regs$laRVa.v:48$268' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:392$551' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:393$552' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:394$553' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:395$554' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.$memrd$\irqvect$system.v:363$524' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.ram0.$memrd$\ram_array$system.v:399$549' in module `\main': merged data $dff with rd enable to cell.

2.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 28 unused cells and 29 unused wires.

2.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory main.sys1.ram0.ram_array by address:
  New clock domain: negedge \clk
    Port 0 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:392$551) has addr \sys1.cpu.addr [10:0].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:393$552) has addr \sys1.cpu.addr [10:0].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:394$553) has addr \sys1.cpu.addr [10:0].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:395$554) has addr \sys1.cpu.addr [10:0].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

2.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\sys1.cpu.regs' in module `\main':
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$253 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$254 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$255 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$256 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$257 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$258 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$259 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$260 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$261 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$262 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$263 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$264 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$265 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$266 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$267 ($meminit)
  $techmap\sys1.cpu.$memwr$\regs$laRVa.v:48$268 ($memwr)
  $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37 ($memrd)
  $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\sys1.irqvect' in module `\main':
  $techmap\sys1.$memwr$\irqvect$system.v:353$527 ($memwr)
  $techmap\sys1.$memrd$\irqvect$system.v:363$524 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\sys1.ram0.ram_array' in module `\main':
  $techmap\sys1.ram0.$meminit$\ram_array$system.v:404$550 ($meminit)
  $techmap\sys1.ram0.$memwr$\ram_array$system.v:395$554 ($memwr)
  $techmap\sys1.ram0.$memrd$\ram_array$system.v:399$549 ($memrd)

2.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing main.sys1.cpu.regs:
  Properties: ports=3 bits=480 rports=2 wports=1 dbits=32 abits=4 words=15
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=241 dwaste=0 bwaste=3856 waste=3856 efficiency=5
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=497 dwaste=0 bwaste=3976 waste=3976 efficiency=2
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1009 dwaste=0 bwaste=4036 waste=4036 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2033 dwaste=0 bwaste=4066 waste=4066 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  No acceptable bram resources found.
Processing main.sys1.irqvect:
  Properties: ports=2 bits=120 rports=1 wports=1 dbits=30 abits=2 words=4
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=252 dwaste=2 bwaste=4040 waste=4040 efficiency=1
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=508 dwaste=2 bwaste=4072 waste=4072 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1020 dwaste=2 bwaste=4088 waste=4088 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2044 dwaste=0 bwaste=4088 waste=4088 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  No acceptable bram resources found.
Processing main.sys1.ram0.ram_array:
  Properties: ports=2 bits=65536 rports=1 wports=1 dbits=32 abits=11 words=2048
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
    Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
    Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
    Selected rule 2.3 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: sys1.ram0.ram_array.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: sys1.ram0.ram_array.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: sys1.ram0.ram_array.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: sys1.ram0.ram_array.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: sys1.ram0.ram_array.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: sys1.ram0.ram_array.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: sys1.ram0.ram_array.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: sys1.ram0.ram_array.7.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: sys1.ram0.ram_array.8.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: sys1.ram0.ram_array.9.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: sys1.ram0.ram_array.10.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: sys1.ram0.ram_array.11.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: sys1.ram0.ram_array.12.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: sys1.ram0.ram_array.13.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: sys1.ram0.ram_array.14.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: sys1.ram0.ram_array.15.0.0

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend: C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/ice40/brams_map.v
Parsing Verilog input from `C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

2.25.2. Continuing TECHMAP pass.
Using template $paramod$be8c4f022bd6b8b20559b3424babea8b4028cf6d\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$a55e48fb992166c381af1521f5b34c16f6f8a00f\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$9c69be8f9340cd156bbb7b0bf0b7607a597ee530\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$4823211fb61d99ca51f625ecec5607f479851488\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c485df537e757f0609a3d1c2ae3745c5d7227be2\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d6b0804d94e2f92e25f12e48670949b66e7fbb2b\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ac8984c02e57aceb9ea266f65e219c973118b775\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$395ce005ae65b44f56605fa94f3c05e7c23af714\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$4c6fa7890f044311b8826fd4894de5722284996c\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d0fe3a95bb06cac237dbd4daada94253edb65a21\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$46d91f9e92fcf72e7183d3cbdb5270110d7f43ac\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$08c878e6e8146c135798f958a47235410266688e\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c42217b12886feb670aefebac3530e694a3ed6cd\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c1a619a3ea11255bb6b1454685521a15cd034e9f\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d6ad321bac668c2468355a07b2dad8736c1bfdef\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$3d032cc2260a0fec608c9645f14cb964811ec6e2\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$653aa41e2d3730c7cf74fca5a3996f50e9258659\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$34be0c56b0491fc9e0d263d420240fdf95f8fd51\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c63a840cdf40d46be963c212ca2d659822860760\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$4a6d0907913ba31f9de6a6b0e147194a1b0dcd35\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$ecc49cf23071de2187379618d21b4b75d945255c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$779c451fe6a4ba91e0eca57fd238ac5a51a24976\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$004d7cc7b59fe59549999059e0121602c119f3f5\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$e01d948c821fc3a2231fc627d8f8f64850f8b369\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$0b5360c5ae8950086f9bf71d64d055738529fe5a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$069c0b7bdc01f2695c44d95c41f6f0742ed9d173\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$f1aa8a633246876e50e9d5f903b2f8ba8782f16d\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1daf2e1b58f8524ce20a89454d4d37509cf945fe\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$3d2960d1dfa8664009c4846684826f21f67d46b0\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a85aad74ec35001e5f97c36082f845972785cfca\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$717327fac870afcfba12d0f4444db43ba70f5cf4\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$676e2c3ff3ce7eb871b2871c8091a0f31c97c460\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.

2.26. Executing ICE40_BRAMINIT pass.

2.27. Executing OPT pass (performing simple optimizations).

2.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 2 unused cells and 395 unused wires.

2.27.5. Finished fast OPT passes.

2.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \sys1.cpu.regs in module \main:
  created 15 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 30 $mux cells.
  write interface: 15 write mux blocks.
Mapping memory cell \sys1.irqvect in module \main:
  created 4 $dff cells and 0 static cells of width 30.
  read interface: 0 $dff and 3 $mux cells.
  write interface: 4 write mux blocks.

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 64 cells.

2.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:121$109:
      Old ports: A=0, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31:20] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y
      New ports: A=12'000000000000, B=\sys1.cpu.IR [31:20], Y=$techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [31:12] = { $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:122$111:
      Old ports: A=0, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31:25] \sys1.cpu.IR [11:7] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y
      New ports: A=12'000000000000, B={ \sys1.cpu.IR [31:25] \sys1.cpu.IR [11:7] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [31:12] = { $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:123$114:
      Old ports: A=0, B={ \sys1.cpu.IR [31:12] 12'000000000000 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y
      New ports: A=20'00000000000000000000, B=\sys1.cpu.IR [31:12], Y=$techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y [31:12]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y [11:0] = 12'000000000000
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:249$201:
      Old ports: A=4'0100, B=4'1000, Y=$techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y
      New ports: A=2'01, B=2'10, Y=$techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y [3:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:253$204:
      Old ports: A=4'0011, B=4'1100, Y=$techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y
      New ports: A=2'01, B=2'10, Y={ $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }
      New connections: { $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [3] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [1] } = { $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:264$215:
      Old ports: A=0, B={ \sys1.cpu.PC 2'00 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y
      New ports: A=30'000000000000000000000000000000, B=\sys1.cpu.PC, Y=$techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y [31:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:265$217:
      Old ports: A=0, B={ \sys1.cpu.PCreg[0] 2'00 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y
      New ports: A=30'000000000000000000000000000000, B=\sys1.cpu.PCreg[0], Y=$techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y [31:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:283$220:
      Old ports: A=30'000000000000000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [7] \sys1.cpu.IR [30:25] \sys1.cpu.IR [11:9] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y
      New ports: A=11'00000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [7] \sys1.cpu.IR [30:25] \sys1.cpu.IR [11:9] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [29:11] = { $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:284$221:
      Old ports: A=30'000000000000000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [19:12] \sys1.cpu.IR [20] \sys1.cpu.IR [30:22] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y
      New ports: A=19'0000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [19:12] \sys1.cpu.IR [20] \sys1.cpu.IR [30:22] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [29:19] = { $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] }
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:254$205:
      Old ports: A=4'1111, B=$techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y, Y=$techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y
      New ports: A=2'11, B={ $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }, Y={ $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [0] }
      New connections: { $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [3] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [1] } = { $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [0] }
  Optimizing cells in module \main.
Performed a total of 10 changes.

2.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 1 cells.

2.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 147 unused wires.

2.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.9. Rerunning OPT passes. (Maybe there is more to do..)

2.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 1 cells.

2.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 8 unused wires.

2.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.16. Rerunning OPT passes. (Maybe there is more to do..)

2.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.29.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.23. Finished OPT passes. (There is nothing left to do.)

2.30. Executing ICE40_WRAPCARRY pass (wrap carries).

2.31. Executing TECHMAP pass (map to technology primitives).

2.31.1. Executing Verilog-2005 frontend: C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/techmap.v
Parsing Verilog input from `C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.31.2. Executing Verilog-2005 frontend: C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/ice40/arith_map.v
Parsing Verilog input from `C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.31.3. Continuing TECHMAP pass.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=8 for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=1\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=1\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=30\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using template $paramod$constmap:435871ccfaaa68ec92802bdcb13436347a619db3$paramod$1297efc30c1e19551d1f4e269f2cbfa7dd15f801\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=7 for cells of type $alu.
Using template $paramod$constmap:f73fd5ba4618feeb57a105b7870e98bc61f18d66$paramod$350e5b3c77f745285d3c3768fb71530b920a3cff\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=22\B_WIDTH=1\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=6 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
No more expansions possible.

2.32. Executing ICE40_OPT pass (performing simple optimizations).

2.32.1. Running ICE40 specific optimizations.

2.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 521 cells.

2.32.4. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$6524 ($_DFF_P_) from module main.
Removing $auto$simplemap.cc:420:simplemap_dff$6504 ($_DFF_P_) from module main.
Removing $auto$simplemap.cc:420:simplemap_dff$6503 ($_DFF_P_) from module main.
Removing $auto$simplemap.cc:420:simplemap_dff$6502 ($_DFF_P_) from module main.
Removing $auto$simplemap.cc:420:simplemap_dff$6501 ($_DFF_P_) from module main.
Removing $auto$simplemap.cc:420:simplemap_dff$6500 ($_DFF_P_) from module main.
Removing $auto$simplemap.cc:420:simplemap_dff$6499 ($_DFF_P_) from module main.
Removing $auto$simplemap.cc:420:simplemap_dff$6498 ($_DFF_P_) from module main.
Removing $auto$simplemap.cc:420:simplemap_dff$6497 ($_DFF_P_) from module main.
Removing $auto$simplemap.cc:420:simplemap_dff$6496 ($_DFF_P_) from module main.
Removing $auto$simplemap.cc:420:simplemap_dff$6495 ($_DFF_P_) from module main.
Removing $auto$simplemap.cc:420:simplemap_dff$6494 ($_DFF_P_) from module main.
Removing $auto$simplemap.cc:420:simplemap_dff$6505 ($_DFF_P_) from module main.
Replaced 13 DFF cells.

2.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 571 unused cells and 900 unused wires.

2.32.6. Rerunning OPT passes. (Removed registers in this run.)

2.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1199.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1204.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1209.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1214.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1219.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1224.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1229.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1234.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1239.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1244.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1249.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1254.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1259.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1264.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1269.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1274.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1279.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1284.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1289.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1294.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1299.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1304.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1309.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1314.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1319.slice[0].carry: CO=\cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1322.slice[0].carry: CO=\sys1.tcount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1325.slice[0].carry: CO=\sys1.uart2.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1340.slice[0].carry: CO=\sys1.spi0.divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1343.slice[0].carry: CO=\sys1.spi0.bitcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1346.slice[0].carry: CO=\sys1.spictl [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1346.slice[6].carry: CO=$auto$alumacc.cc:485:replace_alu$1346.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1349.slice[0].carry: CO=\sys1.uart0.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1352.slice[0].carry: CO=\sys1.uart0.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1355.slice[0].carry: CO=\sys1.uart0.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1358.slice[0].carry: CO=\sys1.uart0.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1361.slice[0].carry: CO=\sys1.uart2.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1364.slice[0].carry: CO=\sys1.uart2.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1367.slice[0].carry: CO=\sys1.uart2.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:196:handle_cell$1497.$auto$alumacc.cc:485:replace_alu$1998.slice[0].carry: CO=\sys1.cpu.rs2 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:196:handle_cell$1544.$auto$alumacc.cc:485:replace_alu$1998.slice[0].carry: CO=\sys1.cpu.rs1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:285:handle_cell$1871.$auto$alumacc.cc:485:replace_alu$1998.slice[0].carry: CO=\sys1.cpu.rd [0]

2.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 34 cells.

2.32.10. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$6525 ($_DFF_P_) from module main.
Replaced 1 DFF cells.

2.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 3 unused cells and 7 unused wires.

2.32.12. Rerunning OPT passes. (Removed registers in this run.)

2.32.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1199.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1209.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1219.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1229.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1239.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1249.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1259.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1269.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1279.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1289.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1299.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1309.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [1]

2.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 10 cells.

2.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 2 unused cells and 3 unused wires.

2.32.18. Rerunning OPT passes. (Removed registers in this run.)

2.32.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1199.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1219.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1239.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1259.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1279.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1299.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [2]

2.32.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 4 cells.

2.32.22. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 2 unused cells and 0 unused wires.

2.32.24. Rerunning OPT passes. (Removed registers in this run.)

2.32.25. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1199.slice[3].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1239.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1279.slice[3].carry: CO=1'1

2.32.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 1 cells.

2.32.28. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 2 unused cells and 0 unused wires.

2.32.30. Rerunning OPT passes. (Removed registers in this run.)

2.32.31. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1199.slice[4].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1279.slice[4].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [4]

2.32.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.34. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 2 unused cells and 2 unused wires.

2.32.36. Rerunning OPT passes. (Removed registers in this run.)

2.32.37. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1199.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$1199.BB [5]

2.32.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.40. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 1 unused cells and 3 unused wires.

2.32.42. Rerunning OPT passes. (Removed registers in this run.)

2.32.43. Running ICE40 specific optimizations.

2.32.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.46. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.32.48. Finished OPT passes. (There is nothing left to do.)

2.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

2.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module main:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2001 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [0] -> \sys1.cpu.regs[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2002 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [1] -> \sys1.cpu.regs[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2003 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [2] -> \sys1.cpu.regs[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2004 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [3] -> \sys1.cpu.regs[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2005 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [4] -> \sys1.cpu.regs[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2006 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [5] -> \sys1.cpu.regs[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2007 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [6] -> \sys1.cpu.regs[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2008 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [7] -> \sys1.cpu.regs[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2009 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [8] -> \sys1.cpu.regs[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2010 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [9] -> \sys1.cpu.regs[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2011 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [10] -> \sys1.cpu.regs[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2012 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [11] -> \sys1.cpu.regs[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2013 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [12] -> \sys1.cpu.regs[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2014 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [13] -> \sys1.cpu.regs[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2015 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [14] -> \sys1.cpu.regs[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2016 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [15] -> \sys1.cpu.regs[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2017 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [16] -> \sys1.cpu.regs[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2018 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [17] -> \sys1.cpu.regs[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2019 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [18] -> \sys1.cpu.regs[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2020 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [19] -> \sys1.cpu.regs[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2021 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [20] -> \sys1.cpu.regs[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2022 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [21] -> \sys1.cpu.regs[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2023 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [22] -> \sys1.cpu.regs[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2024 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [23] -> \sys1.cpu.regs[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2025 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [24] -> \sys1.cpu.regs[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2026 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [25] -> \sys1.cpu.regs[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2027 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [26] -> \sys1.cpu.regs[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2028 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [27] -> \sys1.cpu.regs[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2029 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [28] -> \sys1.cpu.regs[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2030 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [29] -> \sys1.cpu.regs[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2031 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [30] -> \sys1.cpu.regs[1] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2032 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1630 [31] -> \sys1.cpu.regs[1] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2033 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [0] -> \sys1.cpu.regs[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2034 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [1] -> \sys1.cpu.regs[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2035 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [2] -> \sys1.cpu.regs[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2036 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [3] -> \sys1.cpu.regs[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2037 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [4] -> \sys1.cpu.regs[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2038 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [5] -> \sys1.cpu.regs[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2039 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [6] -> \sys1.cpu.regs[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2040 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [7] -> \sys1.cpu.regs[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2041 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [8] -> \sys1.cpu.regs[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2042 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [9] -> \sys1.cpu.regs[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2043 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [10] -> \sys1.cpu.regs[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2044 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [11] -> \sys1.cpu.regs[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2045 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [12] -> \sys1.cpu.regs[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2046 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [13] -> \sys1.cpu.regs[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2047 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [14] -> \sys1.cpu.regs[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2048 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [15] -> \sys1.cpu.regs[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2049 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [16] -> \sys1.cpu.regs[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2050 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [17] -> \sys1.cpu.regs[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2051 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [18] -> \sys1.cpu.regs[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2052 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [19] -> \sys1.cpu.regs[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2053 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [20] -> \sys1.cpu.regs[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2054 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [21] -> \sys1.cpu.regs[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2055 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [22] -> \sys1.cpu.regs[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2056 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [23] -> \sys1.cpu.regs[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2057 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [24] -> \sys1.cpu.regs[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2058 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [25] -> \sys1.cpu.regs[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2059 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [26] -> \sys1.cpu.regs[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2060 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [27] -> \sys1.cpu.regs[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2061 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [28] -> \sys1.cpu.regs[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2062 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [29] -> \sys1.cpu.regs[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2063 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [30] -> \sys1.cpu.regs[2] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2064 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1650 [31] -> \sys1.cpu.regs[2] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2065 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [0] -> \sys1.cpu.regs[4] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2066 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [1] -> \sys1.cpu.regs[4] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2067 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [2] -> \sys1.cpu.regs[4] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2068 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [3] -> \sys1.cpu.regs[4] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2069 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [4] -> \sys1.cpu.regs[4] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2070 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [5] -> \sys1.cpu.regs[4] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2071 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [6] -> \sys1.cpu.regs[4] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2072 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [7] -> \sys1.cpu.regs[4] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2073 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [8] -> \sys1.cpu.regs[4] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2074 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [9] -> \sys1.cpu.regs[4] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2075 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [10] -> \sys1.cpu.regs[4] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2076 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [11] -> \sys1.cpu.regs[4] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2077 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [12] -> \sys1.cpu.regs[4] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2078 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [13] -> \sys1.cpu.regs[4] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2079 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [14] -> \sys1.cpu.regs[4] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2080 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [15] -> \sys1.cpu.regs[4] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2081 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [16] -> \sys1.cpu.regs[4] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2082 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [17] -> \sys1.cpu.regs[4] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2083 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [18] -> \sys1.cpu.regs[4] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2084 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [19] -> \sys1.cpu.regs[4] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2085 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [20] -> \sys1.cpu.regs[4] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2086 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [21] -> \sys1.cpu.regs[4] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2087 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [22] -> \sys1.cpu.regs[4] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2088 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [23] -> \sys1.cpu.regs[4] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2089 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [24] -> \sys1.cpu.regs[4] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2090 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [25] -> \sys1.cpu.regs[4] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2091 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [26] -> \sys1.cpu.regs[4] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2092 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [27] -> \sys1.cpu.regs[4] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2093 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [28] -> \sys1.cpu.regs[4] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2094 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [29] -> \sys1.cpu.regs[4] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2095 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [30] -> \sys1.cpu.regs[4] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2096 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1690 [31] -> \sys1.cpu.regs[4] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2097 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [0] -> \sys1.cpu.regs[5] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2098 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [1] -> \sys1.cpu.regs[5] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2099 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [2] -> \sys1.cpu.regs[5] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2100 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [3] -> \sys1.cpu.regs[5] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2101 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [4] -> \sys1.cpu.regs[5] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2102 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [5] -> \sys1.cpu.regs[5] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2103 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [6] -> \sys1.cpu.regs[5] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2104 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [7] -> \sys1.cpu.regs[5] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2105 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [8] -> \sys1.cpu.regs[5] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2106 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [9] -> \sys1.cpu.regs[5] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2107 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [10] -> \sys1.cpu.regs[5] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2108 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [11] -> \sys1.cpu.regs[5] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2109 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [12] -> \sys1.cpu.regs[5] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2110 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [13] -> \sys1.cpu.regs[5] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2111 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [14] -> \sys1.cpu.regs[5] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2112 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [15] -> \sys1.cpu.regs[5] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2113 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [16] -> \sys1.cpu.regs[5] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2114 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [17] -> \sys1.cpu.regs[5] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2115 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [18] -> \sys1.cpu.regs[5] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2116 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [19] -> \sys1.cpu.regs[5] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2117 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [20] -> \sys1.cpu.regs[5] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2118 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [21] -> \sys1.cpu.regs[5] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2119 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [22] -> \sys1.cpu.regs[5] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2120 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [23] -> \sys1.cpu.regs[5] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2121 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [24] -> \sys1.cpu.regs[5] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2122 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [25] -> \sys1.cpu.regs[5] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2123 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [26] -> \sys1.cpu.regs[5] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2124 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [27] -> \sys1.cpu.regs[5] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2125 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [28] -> \sys1.cpu.regs[5] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2126 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [29] -> \sys1.cpu.regs[5] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2127 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [30] -> \sys1.cpu.regs[5] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2128 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1710 [31] -> \sys1.cpu.regs[5] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2196 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [0] -> \sys1.cpu.regs[12] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2197 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [1] -> \sys1.cpu.regs[12] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2198 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [2] -> \sys1.cpu.regs[12] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2199 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [3] -> \sys1.cpu.regs[12] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2200 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [4] -> \sys1.cpu.regs[12] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2201 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [5] -> \sys1.cpu.regs[12] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2202 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [6] -> \sys1.cpu.regs[12] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2203 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [7] -> \sys1.cpu.regs[12] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2204 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [8] -> \sys1.cpu.regs[12] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2205 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [9] -> \sys1.cpu.regs[12] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2206 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [10] -> \sys1.cpu.regs[12] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2207 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [11] -> \sys1.cpu.regs[12] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2208 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [12] -> \sys1.cpu.regs[12] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2209 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [13] -> \sys1.cpu.regs[12] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2210 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [14] -> \sys1.cpu.regs[12] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2211 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [15] -> \sys1.cpu.regs[12] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2212 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [16] -> \sys1.cpu.regs[12] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2213 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [17] -> \sys1.cpu.regs[12] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2214 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [18] -> \sys1.cpu.regs[12] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2215 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [19] -> \sys1.cpu.regs[12] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2216 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [20] -> \sys1.cpu.regs[12] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2217 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [21] -> \sys1.cpu.regs[12] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2218 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [22] -> \sys1.cpu.regs[12] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2219 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [23] -> \sys1.cpu.regs[12] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2220 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [24] -> \sys1.cpu.regs[12] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2221 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [25] -> \sys1.cpu.regs[12] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2222 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [26] -> \sys1.cpu.regs[12] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2223 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [27] -> \sys1.cpu.regs[12] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2224 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [28] -> \sys1.cpu.regs[12] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2225 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [29] -> \sys1.cpu.regs[12] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2226 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [30] -> \sys1.cpu.regs[12] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2227 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1850 [31] -> \sys1.cpu.regs[12] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2322 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [0] -> \sys1.cpu.regs[11] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2323 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [1] -> \sys1.cpu.regs[11] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2324 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [2] -> \sys1.cpu.regs[11] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2325 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [3] -> \sys1.cpu.regs[11] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2326 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [4] -> \sys1.cpu.regs[11] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2327 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [5] -> \sys1.cpu.regs[11] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2328 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [6] -> \sys1.cpu.regs[11] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2329 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [7] -> \sys1.cpu.regs[11] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2330 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [8] -> \sys1.cpu.regs[11] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2331 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [9] -> \sys1.cpu.regs[11] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2332 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [10] -> \sys1.cpu.regs[11] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2333 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [11] -> \sys1.cpu.regs[11] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2334 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [12] -> \sys1.cpu.regs[11] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2335 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [13] -> \sys1.cpu.regs[11] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2336 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [14] -> \sys1.cpu.regs[11] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2337 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [15] -> \sys1.cpu.regs[11] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2338 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [16] -> \sys1.cpu.regs[11] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2339 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [17] -> \sys1.cpu.regs[11] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2340 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [18] -> \sys1.cpu.regs[11] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2341 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [19] -> \sys1.cpu.regs[11] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2342 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [20] -> \sys1.cpu.regs[11] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2343 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [21] -> \sys1.cpu.regs[11] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2344 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [22] -> \sys1.cpu.regs[11] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2345 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [23] -> \sys1.cpu.regs[11] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2346 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [24] -> \sys1.cpu.regs[11] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2347 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [25] -> \sys1.cpu.regs[11] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2348 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [26] -> \sys1.cpu.regs[11] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2349 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [27] -> \sys1.cpu.regs[11] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2350 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [28] -> \sys1.cpu.regs[11] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2351 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [29] -> \sys1.cpu.regs[11] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2352 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [30] -> \sys1.cpu.regs[11] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2353 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1830 [31] -> \sys1.cpu.regs[11] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2665 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [0] -> \sys1.cpu.regs[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2666 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [1] -> \sys1.cpu.regs[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2667 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [2] -> \sys1.cpu.regs[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2668 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [3] -> \sys1.cpu.regs[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2669 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [4] -> \sys1.cpu.regs[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2670 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [5] -> \sys1.cpu.regs[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2671 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [6] -> \sys1.cpu.regs[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2672 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [7] -> \sys1.cpu.regs[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2673 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [8] -> \sys1.cpu.regs[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2674 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [9] -> \sys1.cpu.regs[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2675 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [10] -> \sys1.cpu.regs[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2676 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [11] -> \sys1.cpu.regs[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2677 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [12] -> \sys1.cpu.regs[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2678 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [13] -> \sys1.cpu.regs[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2679 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [14] -> \sys1.cpu.regs[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2680 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [15] -> \sys1.cpu.regs[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2681 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [16] -> \sys1.cpu.regs[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2682 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [17] -> \sys1.cpu.regs[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2683 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [18] -> \sys1.cpu.regs[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2684 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [19] -> \sys1.cpu.regs[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2685 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [20] -> \sys1.cpu.regs[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2686 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [21] -> \sys1.cpu.regs[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2687 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [22] -> \sys1.cpu.regs[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2688 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [23] -> \sys1.cpu.regs[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2689 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [24] -> \sys1.cpu.regs[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2690 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [25] -> \sys1.cpu.regs[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2691 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [26] -> \sys1.cpu.regs[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2692 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [27] -> \sys1.cpu.regs[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2693 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [28] -> \sys1.cpu.regs[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2694 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [29] -> \sys1.cpu.regs[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2695 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [30] -> \sys1.cpu.regs[3] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2696 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1670 [31] -> \sys1.cpu.regs[3] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2697 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [0] -> \sys1.cpu.regs[8] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2698 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [1] -> \sys1.cpu.regs[8] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2699 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [2] -> \sys1.cpu.regs[8] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2700 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [3] -> \sys1.cpu.regs[8] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2701 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [4] -> \sys1.cpu.regs[8] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2702 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [5] -> \sys1.cpu.regs[8] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2703 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [6] -> \sys1.cpu.regs[8] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2704 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [7] -> \sys1.cpu.regs[8] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2705 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [8] -> \sys1.cpu.regs[8] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2706 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [9] -> \sys1.cpu.regs[8] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2707 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [10] -> \sys1.cpu.regs[8] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2708 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [11] -> \sys1.cpu.regs[8] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2709 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [12] -> \sys1.cpu.regs[8] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2710 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [13] -> \sys1.cpu.regs[8] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2711 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [14] -> \sys1.cpu.regs[8] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2712 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [15] -> \sys1.cpu.regs[8] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2713 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [16] -> \sys1.cpu.regs[8] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2714 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [17] -> \sys1.cpu.regs[8] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2715 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [18] -> \sys1.cpu.regs[8] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2716 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [19] -> \sys1.cpu.regs[8] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2717 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [20] -> \sys1.cpu.regs[8] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2718 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [21] -> \sys1.cpu.regs[8] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2719 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [22] -> \sys1.cpu.regs[8] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2720 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [23] -> \sys1.cpu.regs[8] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2721 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [24] -> \sys1.cpu.regs[8] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2722 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [25] -> \sys1.cpu.regs[8] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2723 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [26] -> \sys1.cpu.regs[8] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2724 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [27] -> \sys1.cpu.regs[8] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2725 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [28] -> \sys1.cpu.regs[8] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2726 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [29] -> \sys1.cpu.regs[8] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2727 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [30] -> \sys1.cpu.regs[8] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2728 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1770 [31] -> \sys1.cpu.regs[8] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2729 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [0] -> \sys1.cpu.regs[7] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2730 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [1] -> \sys1.cpu.regs[7] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2731 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [2] -> \sys1.cpu.regs[7] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2732 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [3] -> \sys1.cpu.regs[7] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2733 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [4] -> \sys1.cpu.regs[7] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2734 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [5] -> \sys1.cpu.regs[7] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2735 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [6] -> \sys1.cpu.regs[7] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2736 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [7] -> \sys1.cpu.regs[7] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2737 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [8] -> \sys1.cpu.regs[7] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2738 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [9] -> \sys1.cpu.regs[7] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2739 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [10] -> \sys1.cpu.regs[7] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2740 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [11] -> \sys1.cpu.regs[7] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2741 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [12] -> \sys1.cpu.regs[7] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2742 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [13] -> \sys1.cpu.regs[7] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2743 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [14] -> \sys1.cpu.regs[7] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2744 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [15] -> \sys1.cpu.regs[7] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2745 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [16] -> \sys1.cpu.regs[7] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2746 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [17] -> \sys1.cpu.regs[7] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2747 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [18] -> \sys1.cpu.regs[7] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2748 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [19] -> \sys1.cpu.regs[7] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2749 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [20] -> \sys1.cpu.regs[7] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2750 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [21] -> \sys1.cpu.regs[7] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2751 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [22] -> \sys1.cpu.regs[7] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2752 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [23] -> \sys1.cpu.regs[7] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2753 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [24] -> \sys1.cpu.regs[7] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2754 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [25] -> \sys1.cpu.regs[7] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2755 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [26] -> \sys1.cpu.regs[7] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2756 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [27] -> \sys1.cpu.regs[7] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2757 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [28] -> \sys1.cpu.regs[7] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2758 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [29] -> \sys1.cpu.regs[7] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2759 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [30] -> \sys1.cpu.regs[7] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2760 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1750 [31] -> \sys1.cpu.regs[7] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2761 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [0] -> \sys1.cpu.regs[9] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2762 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [1] -> \sys1.cpu.regs[9] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2763 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [2] -> \sys1.cpu.regs[9] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2764 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [3] -> \sys1.cpu.regs[9] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2765 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [4] -> \sys1.cpu.regs[9] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2766 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [5] -> \sys1.cpu.regs[9] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2767 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [6] -> \sys1.cpu.regs[9] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2768 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [7] -> \sys1.cpu.regs[9] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2769 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [8] -> \sys1.cpu.regs[9] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2770 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [9] -> \sys1.cpu.regs[9] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2771 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [10] -> \sys1.cpu.regs[9] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2772 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [11] -> \sys1.cpu.regs[9] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2773 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [12] -> \sys1.cpu.regs[9] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2774 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [13] -> \sys1.cpu.regs[9] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2775 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [14] -> \sys1.cpu.regs[9] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2776 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [15] -> \sys1.cpu.regs[9] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2777 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [16] -> \sys1.cpu.regs[9] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2778 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [17] -> \sys1.cpu.regs[9] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2779 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [18] -> \sys1.cpu.regs[9] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2780 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [19] -> \sys1.cpu.regs[9] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2781 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [20] -> \sys1.cpu.regs[9] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2782 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [21] -> \sys1.cpu.regs[9] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2783 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [22] -> \sys1.cpu.regs[9] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2784 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [23] -> \sys1.cpu.regs[9] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2785 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [24] -> \sys1.cpu.regs[9] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2786 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [25] -> \sys1.cpu.regs[9] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2787 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [26] -> \sys1.cpu.regs[9] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2788 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [27] -> \sys1.cpu.regs[9] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2789 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [28] -> \sys1.cpu.regs[9] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2790 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [29] -> \sys1.cpu.regs[9] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2791 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [30] -> \sys1.cpu.regs[9] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2792 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1790 [31] -> \sys1.cpu.regs[9] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2793 to $_DFFE_PP_ for $0\cnt[21:0] [0] -> \cnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2794 to $_DFFE_PP_ for $0\cnt[21:0] [1] -> \cnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2795 to $_DFFE_PP_ for $0\cnt[21:0] [2] -> \cnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2796 to $_DFFE_PP_ for $0\cnt[21:0] [3] -> \cnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2797 to $_DFFE_PP_ for $0\cnt[21:0] [4] -> \cnt [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2798 to $_DFFE_PP_ for $0\cnt[21:0] [5] -> \cnt [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2799 to $_DFFE_PP_ for $0\cnt[21:0] [6] -> \cnt [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2800 to $_DFFE_PP_ for $0\cnt[21:0] [7] -> \cnt [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2801 to $_DFFE_PP_ for $0\cnt[21:0] [8] -> \cnt [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2802 to $_DFFE_PP_ for $0\cnt[21:0] [9] -> \cnt [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2803 to $_DFFE_PP_ for $0\cnt[21:0] [10] -> \cnt [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2804 to $_DFFE_PP_ for $0\cnt[21:0] [11] -> \cnt [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2805 to $_DFFE_PP_ for $0\cnt[21:0] [12] -> \cnt [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2806 to $_DFFE_PP_ for $0\cnt[21:0] [13] -> \cnt [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2807 to $_DFFE_PP_ for $0\cnt[21:0] [14] -> \cnt [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2808 to $_DFFE_PP_ for $0\cnt[21:0] [15] -> \cnt [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2809 to $_DFFE_PP_ for $0\cnt[21:0] [16] -> \cnt [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2810 to $_DFFE_PP_ for $0\cnt[21:0] [17] -> \cnt [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2811 to $_DFFE_PP_ for $0\cnt[21:0] [18] -> \cnt [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2812 to $_DFFE_PP_ for $0\cnt[21:0] [19] -> \cnt [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2813 to $_DFFE_PP_ for $0\cnt[21:0] [20] -> \cnt [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2814 to $_DFFE_PP_ for $0\cnt[21:0] [21] -> \cnt [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2943 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [0] -> \sys1.irqvect[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2944 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [1] -> \sys1.irqvect[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2945 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [2] -> \sys1.irqvect[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2946 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [3] -> \sys1.irqvect[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2947 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [4] -> \sys1.irqvect[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2948 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [5] -> \sys1.irqvect[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2949 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [6] -> \sys1.irqvect[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2950 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [7] -> \sys1.irqvect[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2951 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [8] -> \sys1.irqvect[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2952 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [9] -> \sys1.irqvect[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2953 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [10] -> \sys1.irqvect[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2954 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [11] -> \sys1.irqvect[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2955 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [12] -> \sys1.irqvect[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2956 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [13] -> \sys1.irqvect[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2957 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [14] -> \sys1.irqvect[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2958 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [15] -> \sys1.irqvect[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2959 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [16] -> \sys1.irqvect[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2960 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [17] -> \sys1.irqvect[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2961 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [18] -> \sys1.irqvect[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2962 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [19] -> \sys1.irqvect[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2963 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [20] -> \sys1.irqvect[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2964 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [21] -> \sys1.irqvect[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2965 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [22] -> \sys1.irqvect[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2966 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [23] -> \sys1.irqvect[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2967 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [24] -> \sys1.irqvect[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2968 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [25] -> \sys1.irqvect[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2969 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [26] -> \sys1.irqvect[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2970 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [27] -> \sys1.irqvect[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2971 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [28] -> \sys1.irqvect[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2972 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1917 [29] -> \sys1.irqvect[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3198 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [0] -> \sys1.gpout [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3199 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [1] -> \sys1.gpout [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3200 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [2] -> \sys1.gpout [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3201 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [3] -> \sys1.gpout [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3202 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [4] -> \sys1.gpout [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3203 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [5] -> \sys1.gpout [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3204 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [6] -> \sys1.gpout [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3205 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [7] -> \sys1.gpout [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3206 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [8] -> \sys1.gpout [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3207 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [9] -> \sys1.gpout [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3208 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [10] -> \sys1.gpout [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3209 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [11] -> \sys1.gpout [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3210 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [12] -> \sys1.gpout [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3211 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [13] -> \sys1.gpout [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3212 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [14] -> \sys1.gpout [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3213 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [15] -> \sys1.gpout [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3214 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [16] -> \sys1.gpout [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3215 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [17] -> \sys1.gpout [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3216 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [18] -> \sys1.gpout [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3217 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [19] -> \sys1.gpout [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3218 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [20] -> \sys1.gpout [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3219 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [21] -> \sys1.gpout [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3220 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [22] -> \sys1.gpout [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3221 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [23] -> \sys1.gpout [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3222 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [24] -> \sys1.gpout [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3223 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [25] -> \sys1.gpout [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3224 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [26] -> \sys1.gpout [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3225 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [27] -> \sys1.gpout [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3226 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [28] -> \sys1.gpout [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3227 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [29] -> \sys1.gpout [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3228 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [30] -> \sys1.gpout [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3229 to $_DFFE_PP_ for $techmap\sys1.$0\gpout[31:0] [31] -> \sys1.gpout [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3230 to $_DFFE_PP_ for $techmap\sys1.$0\spictl[13:0] [0] -> \sys1.spictl [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3231 to $_DFFE_PP_ for $techmap\sys1.$0\spictl[13:0] [1] -> \sys1.spictl [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3232 to $_DFFE_PP_ for $techmap\sys1.$0\spictl[13:0] [2] -> \sys1.spictl [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3233 to $_DFFE_PP_ for $techmap\sys1.$0\spictl[13:0] [3] -> \sys1.spictl [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3234 to $_DFFE_PP_ for $techmap\sys1.$0\spictl[13:0] [4] -> \sys1.spictl [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3235 to $_DFFE_PP_ for $techmap\sys1.$0\spictl[13:0] [5] -> \sys1.spictl [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3236 to $_DFFE_PP_ for $techmap\sys1.$0\spictl[13:0] [6] -> \sys1.spictl [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3237 to $_DFFE_PP_ for $techmap\sys1.$0\spictl[13:0] [7] -> \sys1.spictl [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3238 to $_DFFE_PP_ for $techmap\sys1.$0\spictl[13:0] [8] -> \sys1.spictl [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3239 to $_DFFE_PP_ for $techmap\sys1.$0\spictl[13:0] [9] -> \sys1.spictl [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3240 to $_DFFE_PP_ for $techmap\sys1.$0\spictl[13:0] [10] -> \sys1.spictl [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3241 to $_DFFE_PP_ for $techmap\sys1.$0\spictl[13:0] [11] -> \sys1.spictl [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3242 to $_DFFE_PP_ for $techmap\sys1.$0\spictl[13:0] [12] -> \sys1.spictl [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3243 to $_DFFE_PP_ for $techmap\sys1.$0\spictl[13:0] [13] -> \sys1.spictl [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3830 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [0] -> \sys1.irqvect[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3831 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [1] -> \sys1.irqvect[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3832 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [2] -> \sys1.irqvect[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3833 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [3] -> \sys1.irqvect[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3834 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [4] -> \sys1.irqvect[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3835 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [5] -> \sys1.irqvect[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3836 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [6] -> \sys1.irqvect[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3837 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [7] -> \sys1.irqvect[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3838 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [8] -> \sys1.irqvect[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3839 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [9] -> \sys1.irqvect[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3840 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [10] -> \sys1.irqvect[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3841 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [11] -> \sys1.irqvect[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3842 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [12] -> \sys1.irqvect[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3843 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [13] -> \sys1.irqvect[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3844 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [14] -> \sys1.irqvect[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3845 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [15] -> \sys1.irqvect[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3846 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [16] -> \sys1.irqvect[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3847 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [17] -> \sys1.irqvect[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3848 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [18] -> \sys1.irqvect[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3849 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [19] -> \sys1.irqvect[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3850 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [20] -> \sys1.irqvect[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3851 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [21] -> \sys1.irqvect[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3852 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [22] -> \sys1.irqvect[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3853 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [23] -> \sys1.irqvect[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3854 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [24] -> \sys1.irqvect[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3855 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [25] -> \sys1.irqvect[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3856 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [26] -> \sys1.irqvect[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3857 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [27] -> \sys1.irqvect[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3858 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [28] -> \sys1.irqvect[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3859 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1925 [29] -> \sys1.irqvect[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3899 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [0] -> \sys1.cpu.regs[14] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3900 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [1] -> \sys1.cpu.regs[14] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3901 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [2] -> \sys1.cpu.regs[14] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3902 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [3] -> \sys1.cpu.regs[14] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3903 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [4] -> \sys1.cpu.regs[14] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3904 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [5] -> \sys1.cpu.regs[14] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3905 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [6] -> \sys1.cpu.regs[14] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3906 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [7] -> \sys1.cpu.regs[14] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3907 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [8] -> \sys1.cpu.regs[14] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3908 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [9] -> \sys1.cpu.regs[14] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3909 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [10] -> \sys1.cpu.regs[14] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3910 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [11] -> \sys1.cpu.regs[14] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3911 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [12] -> \sys1.cpu.regs[14] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3912 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [13] -> \sys1.cpu.regs[14] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3913 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [14] -> \sys1.cpu.regs[14] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3914 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [15] -> \sys1.cpu.regs[14] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3915 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [16] -> \sys1.cpu.regs[14] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3916 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [17] -> \sys1.cpu.regs[14] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3917 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [18] -> \sys1.cpu.regs[14] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3918 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [19] -> \sys1.cpu.regs[14] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3919 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [20] -> \sys1.cpu.regs[14] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3920 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [21] -> \sys1.cpu.regs[14] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3921 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [22] -> \sys1.cpu.regs[14] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3922 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [23] -> \sys1.cpu.regs[14] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3923 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [24] -> \sys1.cpu.regs[14] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3924 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [25] -> \sys1.cpu.regs[14] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3925 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [26] -> \sys1.cpu.regs[14] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3926 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [27] -> \sys1.cpu.regs[14] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3927 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [28] -> \sys1.cpu.regs[14] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3928 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [29] -> \sys1.cpu.regs[14] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3929 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [30] -> \sys1.cpu.regs[14] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3930 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1890 [31] -> \sys1.cpu.regs[14] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3967 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [0] -> \sys1.cpu.regs[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3968 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [1] -> \sys1.cpu.regs[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3969 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [2] -> \sys1.cpu.regs[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3970 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [3] -> \sys1.cpu.regs[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3971 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [4] -> \sys1.cpu.regs[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3972 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [5] -> \sys1.cpu.regs[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3973 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [6] -> \sys1.cpu.regs[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3974 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [7] -> \sys1.cpu.regs[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3975 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [8] -> \sys1.cpu.regs[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3976 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [9] -> \sys1.cpu.regs[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3977 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [10] -> \sys1.cpu.regs[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3978 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [11] -> \sys1.cpu.regs[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3979 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [12] -> \sys1.cpu.regs[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3980 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [13] -> \sys1.cpu.regs[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3981 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [14] -> \sys1.cpu.regs[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3982 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [15] -> \sys1.cpu.regs[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3983 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [16] -> \sys1.cpu.regs[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3984 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [17] -> \sys1.cpu.regs[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3985 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [18] -> \sys1.cpu.regs[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3986 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [19] -> \sys1.cpu.regs[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3987 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [20] -> \sys1.cpu.regs[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3988 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [21] -> \sys1.cpu.regs[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3989 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [22] -> \sys1.cpu.regs[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3990 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [23] -> \sys1.cpu.regs[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3991 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [24] -> \sys1.cpu.regs[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3992 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [25] -> \sys1.cpu.regs[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3993 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [26] -> \sys1.cpu.regs[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3994 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [27] -> \sys1.cpu.regs[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3995 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [28] -> \sys1.cpu.regs[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3996 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [29] -> \sys1.cpu.regs[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3997 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [30] -> \sys1.cpu.regs[0] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3998 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1610 [31] -> \sys1.cpu.regs[0] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3999 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [0] -> \sys1.irqvect[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4000 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [1] -> \sys1.irqvect[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4001 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [2] -> \sys1.irqvect[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4002 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [3] -> \sys1.irqvect[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4003 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [4] -> \sys1.irqvect[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4004 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [5] -> \sys1.irqvect[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4005 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [6] -> \sys1.irqvect[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4006 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [7] -> \sys1.irqvect[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4007 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [8] -> \sys1.irqvect[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4008 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [9] -> \sys1.irqvect[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4009 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [10] -> \sys1.irqvect[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4010 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [11] -> \sys1.irqvect[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4011 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [12] -> \sys1.irqvect[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4012 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [13] -> \sys1.irqvect[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4013 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [14] -> \sys1.irqvect[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4014 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [15] -> \sys1.irqvect[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4015 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [16] -> \sys1.irqvect[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4016 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [17] -> \sys1.irqvect[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4017 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [18] -> \sys1.irqvect[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4018 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [19] -> \sys1.irqvect[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4019 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [20] -> \sys1.irqvect[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4020 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [21] -> \sys1.irqvect[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4021 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [22] -> \sys1.irqvect[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4022 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [23] -> \sys1.irqvect[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4023 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [24] -> \sys1.irqvect[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4024 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [25] -> \sys1.irqvect[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4025 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [26] -> \sys1.irqvect[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4026 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [27] -> \sys1.irqvect[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4027 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [28] -> \sys1.irqvect[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4028 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1933 [29] -> \sys1.irqvect[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4184 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [0] -> \sys1.irqvect[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4185 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [1] -> \sys1.irqvect[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4186 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [2] -> \sys1.irqvect[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4187 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [3] -> \sys1.irqvect[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4188 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [4] -> \sys1.irqvect[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4189 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [5] -> \sys1.irqvect[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4190 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [6] -> \sys1.irqvect[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4191 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [7] -> \sys1.irqvect[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4192 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [8] -> \sys1.irqvect[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4193 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [9] -> \sys1.irqvect[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4194 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [10] -> \sys1.irqvect[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4195 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [11] -> \sys1.irqvect[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4196 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [12] -> \sys1.irqvect[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4197 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [13] -> \sys1.irqvect[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4198 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [14] -> \sys1.irqvect[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4199 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [15] -> \sys1.irqvect[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4200 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [16] -> \sys1.irqvect[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4201 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [17] -> \sys1.irqvect[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4202 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [18] -> \sys1.irqvect[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4203 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [19] -> \sys1.irqvect[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4204 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [20] -> \sys1.irqvect[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4205 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [21] -> \sys1.irqvect[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4206 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [22] -> \sys1.irqvect[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4207 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [23] -> \sys1.irqvect[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4208 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [24] -> \sys1.irqvect[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4209 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [25] -> \sys1.irqvect[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4210 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [26] -> \sys1.irqvect[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4211 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [27] -> \sys1.irqvect[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4212 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [28] -> \sys1.irqvect[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4213 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1939 [29] -> \sys1.irqvect[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6523 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thre[0:0] -> \sys1.uart2.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6539 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [0] -> \sys1.uart2.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6540 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [1] -> \sys1.uart2.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6541 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [2] -> \sys1.uart2.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6542 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [3] -> \sys1.uart2.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6543 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\stopb[0:0] -> \sys1.uart2.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6544 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [0] -> \sys1.uart2.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6545 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [1] -> \sys1.uart2.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6546 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [2] -> \sys1.uart2.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6547 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [3] -> \sys1.uart2.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6548 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [4] -> \sys1.uart2.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6549 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [5] -> \sys1.uart2.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6550 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [6] -> \sys1.uart2.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6551 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [7] -> \sys1.uart2.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6552 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [0] -> \sys1.uart2.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6553 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [1] -> \sys1.uart2.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6554 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [2] -> \sys1.uart2.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6555 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [3] -> \sys1.uart2.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6556 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [4] -> \sys1.uart2.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6557 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [5] -> \sys1.uart2.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6558 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [6] -> \sys1.uart2.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6559 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [7] -> \sys1.uart2.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6560 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [8] -> \sys1.uart2.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6561 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\ove[0:0] -> \sys1.uart2.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6562 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\dv[0:0] -> \sys1.uart2.dv.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6577 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [0] -> \sys1.cpu.regs[10] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6578 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [1] -> \sys1.cpu.regs[10] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6579 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [2] -> \sys1.cpu.regs[10] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6580 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [3] -> \sys1.cpu.regs[10] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6581 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [4] -> \sys1.cpu.regs[10] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6582 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [5] -> \sys1.cpu.regs[10] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6583 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [6] -> \sys1.cpu.regs[10] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6584 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [7] -> \sys1.cpu.regs[10] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6585 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [8] -> \sys1.cpu.regs[10] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6586 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [9] -> \sys1.cpu.regs[10] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6587 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [10] -> \sys1.cpu.regs[10] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6588 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [11] -> \sys1.cpu.regs[10] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6589 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [12] -> \sys1.cpu.regs[10] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6590 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [13] -> \sys1.cpu.regs[10] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6591 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [14] -> \sys1.cpu.regs[10] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6592 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [15] -> \sys1.cpu.regs[10] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6593 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [16] -> \sys1.cpu.regs[10] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6594 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [17] -> \sys1.cpu.regs[10] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6595 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [18] -> \sys1.cpu.regs[10] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6596 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [19] -> \sys1.cpu.regs[10] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6597 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [20] -> \sys1.cpu.regs[10] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6598 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [21] -> \sys1.cpu.regs[10] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6599 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [22] -> \sys1.cpu.regs[10] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6600 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [23] -> \sys1.cpu.regs[10] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6601 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [24] -> \sys1.cpu.regs[10] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6602 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [25] -> \sys1.cpu.regs[10] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6603 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [26] -> \sys1.cpu.regs[10] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6604 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [27] -> \sys1.cpu.regs[10] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6605 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [28] -> \sys1.cpu.regs[10] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6606 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [29] -> \sys1.cpu.regs[10] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6607 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [30] -> \sys1.cpu.regs[10] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6608 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1810 [31] -> \sys1.cpu.regs[10] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7048 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [0] -> \sys1.cpu.regs[6] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7049 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [1] -> \sys1.cpu.regs[6] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7050 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [2] -> \sys1.cpu.regs[6] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7051 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [3] -> \sys1.cpu.regs[6] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7052 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [4] -> \sys1.cpu.regs[6] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7053 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [5] -> \sys1.cpu.regs[6] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7054 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [6] -> \sys1.cpu.regs[6] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7055 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [7] -> \sys1.cpu.regs[6] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7056 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [8] -> \sys1.cpu.regs[6] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7057 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [9] -> \sys1.cpu.regs[6] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7058 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [10] -> \sys1.cpu.regs[6] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7059 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [11] -> \sys1.cpu.regs[6] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7060 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [12] -> \sys1.cpu.regs[6] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7061 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [13] -> \sys1.cpu.regs[6] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7062 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [14] -> \sys1.cpu.regs[6] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7063 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [15] -> \sys1.cpu.regs[6] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7064 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [16] -> \sys1.cpu.regs[6] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7065 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [17] -> \sys1.cpu.regs[6] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7066 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [18] -> \sys1.cpu.regs[6] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7067 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [19] -> \sys1.cpu.regs[6] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7068 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [20] -> \sys1.cpu.regs[6] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7069 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [21] -> \sys1.cpu.regs[6] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7070 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [22] -> \sys1.cpu.regs[6] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7071 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [23] -> \sys1.cpu.regs[6] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7072 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [24] -> \sys1.cpu.regs[6] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7073 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [25] -> \sys1.cpu.regs[6] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7074 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [26] -> \sys1.cpu.regs[6] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7075 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [27] -> \sys1.cpu.regs[6] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7076 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [28] -> \sys1.cpu.regs[6] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7077 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [29] -> \sys1.cpu.regs[6] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7078 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [30] -> \sys1.cpu.regs[6] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7079 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1730 [31] -> \sys1.cpu.regs[6] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7187 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\sck[0:0] -> \sys1.spi0.sck.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7188 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\bitcnt[5:0] [0] -> \sys1.spi0.bitcnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7189 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\bitcnt[5:0] [1] -> \sys1.spi0.bitcnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7190 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\bitcnt[5:0] [2] -> \sys1.spi0.bitcnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7191 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\bitcnt[5:0] [3] -> \sys1.spi0.bitcnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7192 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\bitcnt[5:0] [4] -> \sys1.spi0.bitcnt [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7193 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\bitcnt[5:0] [5] -> \sys1.spi0.bitcnt [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7195 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [0] -> \sys1.spiDataRx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7196 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [1] -> \sys1.spiDataRx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7197 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [2] -> \sys1.spiDataRx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7198 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [3] -> \sys1.spiDataRx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7199 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [4] -> \sys1.spiDataRx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7200 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [5] -> \sys1.spiDataRx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7201 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [6] -> \sys1.spiDataRx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7202 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [7] -> \sys1.spiDataRx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7203 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [8] -> \sys1.spiDataRx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7204 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [9] -> \sys1.spiDataRx [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7205 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [10] -> \sys1.spiDataRx [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7206 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [11] -> \sys1.spiDataRx [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7207 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [12] -> \sys1.spiDataRx [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7208 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [13] -> \sys1.spiDataRx [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7209 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [14] -> \sys1.spiDataRx [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7210 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [15] -> \sys1.spiDataRx [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7211 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [16] -> \sys1.spiDataRx [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7212 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [17] -> \sys1.spiDataRx [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7213 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [18] -> \sys1.spiDataRx [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7214 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [19] -> \sys1.spiDataRx [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7215 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [20] -> \sys1.spiDataRx [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7216 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [21] -> \sys1.spiDataRx [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7217 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [22] -> \sys1.spiDataRx [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7218 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [23] -> \sys1.spiDataRx [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7219 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [24] -> \sys1.spiDataRx [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7220 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [25] -> \sys1.spiDataRx [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7221 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [26] -> \sys1.spiDataRx [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7222 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [27] -> \sys1.spiDataRx [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7223 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [28] -> \sys1.spiDataRx [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7224 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [29] -> \sys1.spiDataRx [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7225 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [30] -> \sys1.spiDataRx [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7226 to $_DFFE_PP_ for $techmap\sys1.spi0.$0\shreg[31:0] [31] -> \sys1.spiDataRx [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7645 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [0] -> \sys1.uart0.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7646 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [1] -> \sys1.uart0.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7647 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [2] -> \sys1.uart0.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7648 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [3] -> \sys1.uart0.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7649 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [4] -> \sys1.uart0.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7650 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [5] -> \sys1.uart0.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7651 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [6] -> \sys1.uart0.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7652 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [7] -> \sys1.uart0.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7653 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [8] -> \sys1.uart0.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7654 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [9] -> \sys1.uart0.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7655 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [10] -> \sys1.uart0.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7656 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [11] -> \sys1.uart0.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7683 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [0] -> \sys1.uart0.thr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7684 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [1] -> \sys1.uart0.thr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7685 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [2] -> \sys1.uart0.thr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7686 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [3] -> \sys1.uart0.thr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7687 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [4] -> \sys1.uart0.thr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7688 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [5] -> \sys1.uart0.thr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7689 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [6] -> \sys1.uart0.thr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7690 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [7] -> \sys1.uart0.thr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7691 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thre[0:0] -> \sys1.uart0.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7707 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [0] -> \sys1.uart0.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7708 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [1] -> \sys1.uart0.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7709 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [2] -> \sys1.uart0.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7710 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [3] -> \sys1.uart0.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7711 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\stopb[0:0] -> \sys1.uart0.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7712 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [0] -> \sys1.uart0.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7713 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [1] -> \sys1.uart0.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7714 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [2] -> \sys1.uart0.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7715 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [3] -> \sys1.uart0.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7716 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [4] -> \sys1.uart0.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7717 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [5] -> \sys1.uart0.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7718 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [6] -> \sys1.uart0.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7719 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [7] -> \sys1.uart0.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7720 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [0] -> \sys1.uart0.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7721 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [1] -> \sys1.uart0.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7722 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [2] -> \sys1.uart0.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7723 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [3] -> \sys1.uart0.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7724 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [4] -> \sys1.uart0.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7725 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [5] -> \sys1.uart0.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7726 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [6] -> \sys1.uart0.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7727 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [7] -> \sys1.uart0.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7728 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [8] -> \sys1.uart0.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7729 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\ove[0:0] -> \sys1.uart0.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7730 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\dv[0:0] -> \sys1.uart0.dv.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7859 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [0] -> \sys1.cpu.regs[13] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7860 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [1] -> \sys1.cpu.regs[13] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7861 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [2] -> \sys1.cpu.regs[13] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7862 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [3] -> \sys1.cpu.regs[13] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7863 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [4] -> \sys1.cpu.regs[13] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7864 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [5] -> \sys1.cpu.regs[13] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7865 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [6] -> \sys1.cpu.regs[13] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7866 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [7] -> \sys1.cpu.regs[13] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7867 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [8] -> \sys1.cpu.regs[13] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7868 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [9] -> \sys1.cpu.regs[13] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7869 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [10] -> \sys1.cpu.regs[13] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7870 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [11] -> \sys1.cpu.regs[13] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7871 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [12] -> \sys1.cpu.regs[13] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7872 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [13] -> \sys1.cpu.regs[13] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7873 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [14] -> \sys1.cpu.regs[13] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7874 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [15] -> \sys1.cpu.regs[13] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7875 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [16] -> \sys1.cpu.regs[13] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7876 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [17] -> \sys1.cpu.regs[13] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7877 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [18] -> \sys1.cpu.regs[13] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7878 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [19] -> \sys1.cpu.regs[13] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7879 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [20] -> \sys1.cpu.regs[13] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7880 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [21] -> \sys1.cpu.regs[13] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7881 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [22] -> \sys1.cpu.regs[13] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7882 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [23] -> \sys1.cpu.regs[13] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7883 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [24] -> \sys1.cpu.regs[13] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7884 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [25] -> \sys1.cpu.regs[13] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7885 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [26] -> \sys1.cpu.regs[13] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7886 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [27] -> \sys1.cpu.regs[13] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7887 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [28] -> \sys1.cpu.regs[13] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7888 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [29] -> \sys1.cpu.regs[13] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7889 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [30] -> \sys1.cpu.regs[13] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7890 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1870 [31] -> \sys1.cpu.regs[13] [31].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$3244 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[1:0] [0] -> \sys1.irqen [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$3245 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[1:0] [1] -> \sys1.irqen [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4278 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [0] -> \sys1.cpu.PCreg[0] [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4279 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [1] -> \sys1.cpu.PCreg[0] [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4280 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [2] -> \sys1.cpu.PCreg[0] [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4281 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [3] -> \sys1.cpu.PCreg[0] [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4282 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [4] -> \sys1.cpu.PCreg[0] [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4283 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [5] -> \sys1.cpu.PCreg[0] [5].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4284 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [6] -> \sys1.cpu.PCreg[0] [6].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4285 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [7] -> \sys1.cpu.PCreg[0] [7].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4286 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [8] -> \sys1.cpu.PCreg[0] [8].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4287 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [9] -> \sys1.cpu.PCreg[0] [9].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4288 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [10] -> \sys1.cpu.PCreg[0] [10].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4289 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [11] -> \sys1.cpu.PCreg[0] [11].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4290 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [12] -> \sys1.cpu.PCreg[0] [12].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4291 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [13] -> \sys1.cpu.PCreg[0] [13].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4292 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [14] -> \sys1.cpu.PCreg[0] [14].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4293 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [15] -> \sys1.cpu.PCreg[0] [15].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4294 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [16] -> \sys1.cpu.PCreg[0] [16].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4295 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [17] -> \sys1.cpu.PCreg[0] [17].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4296 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [18] -> \sys1.cpu.PCreg[0] [18].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4297 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [19] -> \sys1.cpu.PCreg[0] [19].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4298 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [20] -> \sys1.cpu.PCreg[0] [20].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4299 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [21] -> \sys1.cpu.PCreg[0] [21].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4300 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [22] -> \sys1.cpu.PCreg[0] [22].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4301 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [23] -> \sys1.cpu.PCreg[0] [23].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4302 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [24] -> \sys1.cpu.PCreg[0] [24].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4303 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [25] -> \sys1.cpu.PCreg[0] [25].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4304 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [26] -> \sys1.cpu.PCreg[0] [26].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4305 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [27] -> \sys1.cpu.PCreg[0] [27].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4306 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [28] -> \sys1.cpu.PCreg[0] [28].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4307 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [29] -> \sys1.cpu.PCreg[0] [29].

2.35. Executing TECHMAP pass (map to technology primitives).

2.35.1. Executing Verilog-2005 frontend: C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$__DFFE_PP0 for cells of type $__DFFE_PP0.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
No more expansions possible.

2.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping main.$auto$alumacc.cc:485:replace_alu$1355.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1352.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1340.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1367.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1343.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1346.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1349.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1358.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1361.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1364.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1319.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1322.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1325.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:196:handle_cell$1497.$auto$alumacc.cc:485:replace_alu$1998.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:196:handle_cell$1544.$auto$alumacc.cc:485:replace_alu$1998.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:285:handle_cell$1871.$auto$alumacc.cc:485:replace_alu$1998.slice[0].carry ($lut).

2.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in main.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7890 (SB_DFFE): \sys1.cpu.regs[13] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2024 (SB_DFFE): \sys1.cpu.regs[1] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2057 (SB_DFFE): \sys1.cpu.regs[2] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2063 (SB_DFFE): \sys1.cpu.regs[2] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2197 (SB_DFFE): \sys1.cpu.regs[12] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2068 (SB_DFFE): \sys1.cpu.regs[4] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2105 (SB_DFFE): \sys1.cpu.regs[5] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2103 (SB_DFFE): \sys1.cpu.regs[5] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7859 (SB_DFFE): \sys1.cpu.regs[13] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2056 (SB_DFFE): \sys1.cpu.regs[2] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2015 (SB_DFFE): \sys1.cpu.regs[1] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2079 (SB_DFFE): \sys1.cpu.regs[4] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2011 (SB_DFFE): \sys1.cpu.regs[1] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2012 (SB_DFFE): \sys1.cpu.regs[1] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2016 (SB_DFFE): \sys1.cpu.regs[1] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2010 (SB_DFFE): \sys1.cpu.regs[1] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2045 (SB_DFFE): \sys1.cpu.regs[2] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2117 (SB_DFFE): \sys1.cpu.regs[5] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2074 (SB_DFFE): \sys1.cpu.regs[4] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2075 (SB_DFFE): \sys1.cpu.regs[4] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2046 (SB_DFFE): \sys1.cpu.regs[2] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2109 (SB_DFFE): \sys1.cpu.regs[5] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2107 (SB_DFFE): \sys1.cpu.regs[5] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2025 (SB_DFFE): \sys1.cpu.regs[1] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2111 (SB_DFFE): \sys1.cpu.regs[5] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2062 (SB_DFFE): \sys1.cpu.regs[2] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2069 (SB_DFFE): \sys1.cpu.regs[4] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2027 (SB_DFFE): \sys1.cpu.regs[1] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2005 (SB_DFFE): \sys1.cpu.regs[1] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2051 (SB_DFFE): \sys1.cpu.regs[2] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2196 (SB_DFFE): \sys1.cpu.regs[12] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6577 (SB_DFFE): \sys1.cpu.regs[10] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2120 (SB_DFFE): \sys1.cpu.regs[5] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2030 (SB_DFFE): \sys1.cpu.regs[1] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2034 (SB_DFFE): \sys1.cpu.regs[2] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2061 (SB_DFFE): \sys1.cpu.regs[2] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2080 (SB_DFFE): \sys1.cpu.regs[4] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2058 (SB_DFFE): \sys1.cpu.regs[2] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2052 (SB_DFFE): \sys1.cpu.regs[2] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2076 (SB_DFFE): \sys1.cpu.regs[4] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2003 (SB_DFFE): \sys1.cpu.regs[1] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7179 (SB_DFF): \sys1.spi0.divcnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3967 (SB_DFFE): \sys1.cpu.regs[0] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2013 (SB_DFFE): \sys1.cpu.regs[1] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2014 (SB_DFFE): \sys1.cpu.regs[1] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2020 (SB_DFFE): \sys1.cpu.regs[1] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2113 (SB_DFFE): \sys1.cpu.regs[5] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2110 (SB_DFFE): \sys1.cpu.regs[5] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2006 (SB_DFFE): \sys1.cpu.regs[1] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2007 (SB_DFFE): \sys1.cpu.regs[1] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2100 (SB_DFFE): \sys1.cpu.regs[5] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7048 (SB_DFFE): \sys1.cpu.regs[6] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2094 (SB_DFFE): \sys1.cpu.regs[4] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2077 (SB_DFFE): \sys1.cpu.regs[4] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2070 (SB_DFFE): \sys1.cpu.regs[4] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2039 (SB_DFFE): \sys1.cpu.regs[2] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2053 (SB_DFFE): \sys1.cpu.regs[2] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2128 (SB_DFFE): \sys1.cpu.regs[5] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2078 (SB_DFFE): \sys1.cpu.regs[4] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2102 (SB_DFFE): \sys1.cpu.regs[5] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2059 (SB_DFFE): \sys1.cpu.regs[2] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2101 (SB_DFFE): \sys1.cpu.regs[5] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2064 (SB_DFFE): \sys1.cpu.regs[2] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2123 (SB_DFFE): \sys1.cpu.regs[5] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2049 (SB_DFFE): \sys1.cpu.regs[2] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2106 (SB_DFFE): \sys1.cpu.regs[5] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2023 (SB_DFFE): \sys1.cpu.regs[1] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2022 (SB_DFFE): \sys1.cpu.regs[1] [21] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4339 (SB_DFFR): \sys1.cpu.q0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2112 (SB_DFFE): \sys1.cpu.regs[5] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2116 (SB_DFFE): \sys1.cpu.regs[5] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3899 (SB_DFFE): \sys1.cpu.regs[14] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2115 (SB_DFFE): \sys1.cpu.regs[5] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2037 (SB_DFFE): \sys1.cpu.regs[2] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2055 (SB_DFFE): \sys1.cpu.regs[2] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2035 (SB_DFFE): \sys1.cpu.regs[2] [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$3244 (SB_DFFER): \sys1.irqen [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2081 (SB_DFFE): \sys1.cpu.regs[4] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2008 (SB_DFFE): \sys1.cpu.regs[1] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2009 (SB_DFFE): \sys1.cpu.regs[1] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3225 (SB_DFFE): \sys1.gpout [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2054 (SB_DFFE): \sys1.cpu.regs[2] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2695 (SB_DFFE): \sys1.cpu.regs[3] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2124 (SB_DFFE): \sys1.cpu.regs[5] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2097 (SB_DFFE): \sys1.cpu.regs[5] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2323 (SB_DFFE): \sys1.cpu.regs[11] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2082 (SB_DFFE): \sys1.cpu.regs[4] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2040 (SB_DFFE): \sys1.cpu.regs[2] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2093 (SB_DFFE): \sys1.cpu.regs[4] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2091 (SB_DFFE): \sys1.cpu.regs[4] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2098 (SB_DFFE): \sys1.cpu.regs[5] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2092 (SB_DFFE): \sys1.cpu.regs[4] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2090 (SB_DFFE): \sys1.cpu.regs[4] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2099 (SB_DFFE): \sys1.cpu.regs[5] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2065 (SB_DFFE): \sys1.cpu.regs[4] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2096 (SB_DFFE): \sys1.cpu.regs[4] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2089 (SB_DFFE): \sys1.cpu.regs[4] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2026 (SB_DFFE): \sys1.cpu.regs[1] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2060 (SB_DFFE): \sys1.cpu.regs[2] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2032 (SB_DFFE): \sys1.cpu.regs[1] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2104 (SB_DFFE): \sys1.cpu.regs[5] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2066 (SB_DFFE): \sys1.cpu.regs[4] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2067 (SB_DFFE): \sys1.cpu.regs[4] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2029 (SB_DFFE): \sys1.cpu.regs[1] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2108 (SB_DFFE): \sys1.cpu.regs[5] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2028 (SB_DFFE): \sys1.cpu.regs[1] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2048 (SB_DFFE): \sys1.cpu.regs[2] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2084 (SB_DFFE): \sys1.cpu.regs[4] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2071 (SB_DFFE): \sys1.cpu.regs[4] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2047 (SB_DFFE): \sys1.cpu.regs[2] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2114 (SB_DFFE): \sys1.cpu.regs[5] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2021 (SB_DFFE): \sys1.cpu.regs[1] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2072 (SB_DFFE): \sys1.cpu.regs[4] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2073 (SB_DFFE): \sys1.cpu.regs[4] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2118 (SB_DFFE): \sys1.cpu.regs[5] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2019 (SB_DFFE): \sys1.cpu.regs[1] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2004 (SB_DFFE): \sys1.cpu.regs[1] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2119 (SB_DFFE): \sys1.cpu.regs[5] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2033 (SB_DFFE): \sys1.cpu.regs[2] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2121 (SB_DFFE): \sys1.cpu.regs[5] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2122 (SB_DFFE): \sys1.cpu.regs[5] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2087 (SB_DFFE): \sys1.cpu.regs[4] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3187 (SB_DFF): \sys1.tcount [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2322 (SB_DFFE): \sys1.cpu.regs[11] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2761 (SB_DFFE): \sys1.cpu.regs[9] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2036 (SB_DFFE): \sys1.cpu.regs[2] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2125 (SB_DFFE): \sys1.cpu.regs[5] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2198 (SB_DFFE): \sys1.cpu.regs[12] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2199 (SB_DFFE): \sys1.cpu.regs[12] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2200 (SB_DFFE): \sys1.cpu.regs[12] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2201 (SB_DFFE): \sys1.cpu.regs[12] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2202 (SB_DFFE): \sys1.cpu.regs[12] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2203 (SB_DFFE): \sys1.cpu.regs[12] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2204 (SB_DFFE): \sys1.cpu.regs[12] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2205 (SB_DFFE): \sys1.cpu.regs[12] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2206 (SB_DFFE): \sys1.cpu.regs[12] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2207 (SB_DFFE): \sys1.cpu.regs[12] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2208 (SB_DFFE): \sys1.cpu.regs[12] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2209 (SB_DFFE): \sys1.cpu.regs[12] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2210 (SB_DFFE): \sys1.cpu.regs[12] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2211 (SB_DFFE): \sys1.cpu.regs[12] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2212 (SB_DFFE): \sys1.cpu.regs[12] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2213 (SB_DFFE): \sys1.cpu.regs[12] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2214 (SB_DFFE): \sys1.cpu.regs[12] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2215 (SB_DFFE): \sys1.cpu.regs[12] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2216 (SB_DFFE): \sys1.cpu.regs[12] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2217 (SB_DFFE): \sys1.cpu.regs[12] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2218 (SB_DFFE): \sys1.cpu.regs[12] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2219 (SB_DFFE): \sys1.cpu.regs[12] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2220 (SB_DFFE): \sys1.cpu.regs[12] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2221 (SB_DFFE): \sys1.cpu.regs[12] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2222 (SB_DFFE): \sys1.cpu.regs[12] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2223 (SB_DFFE): \sys1.cpu.regs[12] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2224 (SB_DFFE): \sys1.cpu.regs[12] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2225 (SB_DFFE): \sys1.cpu.regs[12] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2226 (SB_DFFE): \sys1.cpu.regs[12] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2227 (SB_DFFE): \sys1.cpu.regs[12] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2088 (SB_DFFE): \sys1.cpu.regs[4] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2031 (SB_DFFE): \sys1.cpu.regs[1] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2324 (SB_DFFE): \sys1.cpu.regs[11] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2325 (SB_DFFE): \sys1.cpu.regs[11] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2326 (SB_DFFE): \sys1.cpu.regs[11] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2327 (SB_DFFE): \sys1.cpu.regs[11] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2328 (SB_DFFE): \sys1.cpu.regs[11] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2329 (SB_DFFE): \sys1.cpu.regs[11] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2330 (SB_DFFE): \sys1.cpu.regs[11] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2331 (SB_DFFE): \sys1.cpu.regs[11] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2332 (SB_DFFE): \sys1.cpu.regs[11] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2333 (SB_DFFE): \sys1.cpu.regs[11] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2334 (SB_DFFE): \sys1.cpu.regs[11] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2335 (SB_DFFE): \sys1.cpu.regs[11] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2336 (SB_DFFE): \sys1.cpu.regs[11] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2337 (SB_DFFE): \sys1.cpu.regs[11] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2338 (SB_DFFE): \sys1.cpu.regs[11] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2339 (SB_DFFE): \sys1.cpu.regs[11] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2340 (SB_DFFE): \sys1.cpu.regs[11] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2341 (SB_DFFE): \sys1.cpu.regs[11] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2342 (SB_DFFE): \sys1.cpu.regs[11] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2343 (SB_DFFE): \sys1.cpu.regs[11] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2344 (SB_DFFE): \sys1.cpu.regs[11] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2345 (SB_DFFE): \sys1.cpu.regs[11] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2346 (SB_DFFE): \sys1.cpu.regs[11] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2347 (SB_DFFE): \sys1.cpu.regs[11] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2348 (SB_DFFE): \sys1.cpu.regs[11] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2349 (SB_DFFE): \sys1.cpu.regs[11] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2350 (SB_DFFE): \sys1.cpu.regs[11] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2351 (SB_DFFE): \sys1.cpu.regs[11] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2352 (SB_DFFE): \sys1.cpu.regs[11] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2353 (SB_DFFE): \sys1.cpu.regs[11] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2809 (SB_DFFE): \cnt [16] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2668 (SB_DFFE): \sys1.cpu.regs[3] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2810 (SB_DFFE): \cnt [17] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2670 (SB_DFFE): \sys1.cpu.regs[3] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2811 (SB_DFFE): \cnt [18] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2672 (SB_DFFE): \sys1.cpu.regs[3] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2812 (SB_DFFE): \cnt [19] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2674 (SB_DFFE): \sys1.cpu.regs[3] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2813 (SB_DFFE): \cnt [20] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2676 (SB_DFFE): \sys1.cpu.regs[3] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2814 (SB_DFFE): \cnt [21] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2678 (SB_DFFE): \sys1.cpu.regs[3] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2679 (SB_DFFE): \sys1.cpu.regs[3] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2680 (SB_DFFE): \sys1.cpu.regs[3] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2681 (SB_DFFE): \sys1.cpu.regs[3] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2682 (SB_DFFE): \sys1.cpu.regs[3] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2683 (SB_DFFE): \sys1.cpu.regs[3] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2684 (SB_DFFE): \sys1.cpu.regs[3] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2685 (SB_DFFE): \sys1.cpu.regs[3] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2686 (SB_DFFE): \sys1.cpu.regs[3] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2687 (SB_DFFE): \sys1.cpu.regs[3] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2688 (SB_DFFE): \sys1.cpu.regs[3] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2689 (SB_DFFE): \sys1.cpu.regs[3] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2690 (SB_DFFE): \sys1.cpu.regs[3] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2691 (SB_DFFE): \sys1.cpu.regs[3] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2692 (SB_DFFE): \sys1.cpu.regs[3] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2693 (SB_DFFE): \sys1.cpu.regs[3] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2694 (SB_DFFE): \sys1.cpu.regs[3] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2696 (SB_DFFE): \sys1.cpu.regs[3] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2698 (SB_DFFE): \sys1.cpu.regs[8] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2800 (SB_DFFE): \cnt [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2700 (SB_DFFE): \sys1.cpu.regs[8] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2701 (SB_DFFE): \sys1.cpu.regs[8] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2702 (SB_DFFE): \sys1.cpu.regs[8] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2705 (SB_DFFE): \sys1.cpu.regs[8] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2703 (SB_DFFE): \sys1.cpu.regs[8] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2704 (SB_DFFE): \sys1.cpu.regs[8] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2713 (SB_DFFE): \sys1.cpu.regs[8] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2706 (SB_DFFE): \sys1.cpu.regs[8] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2707 (SB_DFFE): \sys1.cpu.regs[8] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2708 (SB_DFFE): \sys1.cpu.regs[8] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2709 (SB_DFFE): \sys1.cpu.regs[8] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2710 (SB_DFFE): \sys1.cpu.regs[8] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2711 (SB_DFFE): \sys1.cpu.regs[8] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2712 (SB_DFFE): \sys1.cpu.regs[8] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2720 (SB_DFFE): \sys1.cpu.regs[8] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2714 (SB_DFFE): \sys1.cpu.regs[8] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2715 (SB_DFFE): \sys1.cpu.regs[8] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2716 (SB_DFFE): \sys1.cpu.regs[8] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2717 (SB_DFFE): \sys1.cpu.regs[8] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2718 (SB_DFFE): \sys1.cpu.regs[8] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2719 (SB_DFFE): \sys1.cpu.regs[8] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2732 (SB_DFFE): \sys1.cpu.regs[7] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2721 (SB_DFFE): \sys1.cpu.regs[8] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2722 (SB_DFFE): \sys1.cpu.regs[8] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2723 (SB_DFFE): \sys1.cpu.regs[8] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2724 (SB_DFFE): \sys1.cpu.regs[8] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2725 (SB_DFFE): \sys1.cpu.regs[8] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2726 (SB_DFFE): \sys1.cpu.regs[8] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2727 (SB_DFFE): \sys1.cpu.regs[8] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2728 (SB_DFFE): \sys1.cpu.regs[8] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2730 (SB_DFFE): \sys1.cpu.regs[7] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2697 (SB_DFFE): \sys1.cpu.regs[8] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2731 (SB_DFFE): \sys1.cpu.regs[7] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2733 (SB_DFFE): \sys1.cpu.regs[7] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2739 (SB_DFFE): \sys1.cpu.regs[7] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2734 (SB_DFFE): \sys1.cpu.regs[7] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2735 (SB_DFFE): \sys1.cpu.regs[7] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2736 (SB_DFFE): \sys1.cpu.regs[7] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2737 (SB_DFFE): \sys1.cpu.regs[7] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2738 (SB_DFFE): \sys1.cpu.regs[7] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2744 (SB_DFFE): \sys1.cpu.regs[7] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2740 (SB_DFFE): \sys1.cpu.regs[7] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2741 (SB_DFFE): \sys1.cpu.regs[7] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2742 (SB_DFFE): \sys1.cpu.regs[7] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2743 (SB_DFFE): \sys1.cpu.regs[7] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2752 (SB_DFFE): \sys1.cpu.regs[7] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2745 (SB_DFFE): \sys1.cpu.regs[7] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2746 (SB_DFFE): \sys1.cpu.regs[7] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2747 (SB_DFFE): \sys1.cpu.regs[7] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2748 (SB_DFFE): \sys1.cpu.regs[7] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2749 (SB_DFFE): \sys1.cpu.regs[7] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2750 (SB_DFFE): \sys1.cpu.regs[7] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2751 (SB_DFFE): \sys1.cpu.regs[7] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2126 (SB_DFFE): \sys1.cpu.regs[5] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2753 (SB_DFFE): \sys1.cpu.regs[7] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2754 (SB_DFFE): \sys1.cpu.regs[7] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2755 (SB_DFFE): \sys1.cpu.regs[7] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2756 (SB_DFFE): \sys1.cpu.regs[7] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2757 (SB_DFFE): \sys1.cpu.regs[7] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2758 (SB_DFFE): \sys1.cpu.regs[7] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2759 (SB_DFFE): \sys1.cpu.regs[7] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2760 (SB_DFFE): \sys1.cpu.regs[7] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2762 (SB_DFFE): \sys1.cpu.regs[9] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2729 (SB_DFFE): \sys1.cpu.regs[7] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2763 (SB_DFFE): \sys1.cpu.regs[9] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2764 (SB_DFFE): \sys1.cpu.regs[9] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2765 (SB_DFFE): \sys1.cpu.regs[9] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2766 (SB_DFFE): \sys1.cpu.regs[9] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2767 (SB_DFFE): \sys1.cpu.regs[9] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2768 (SB_DFFE): \sys1.cpu.regs[9] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2769 (SB_DFFE): \sys1.cpu.regs[9] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2770 (SB_DFFE): \sys1.cpu.regs[9] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2771 (SB_DFFE): \sys1.cpu.regs[9] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2772 (SB_DFFE): \sys1.cpu.regs[9] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2773 (SB_DFFE): \sys1.cpu.regs[9] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2774 (SB_DFFE): \sys1.cpu.regs[9] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2775 (SB_DFFE): \sys1.cpu.regs[9] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2776 (SB_DFFE): \sys1.cpu.regs[9] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2777 (SB_DFFE): \sys1.cpu.regs[9] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2778 (SB_DFFE): \sys1.cpu.regs[9] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2779 (SB_DFFE): \sys1.cpu.regs[9] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2780 (SB_DFFE): \sys1.cpu.regs[9] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2781 (SB_DFFE): \sys1.cpu.regs[9] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2782 (SB_DFFE): \sys1.cpu.regs[9] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2086 (SB_DFFE): \sys1.cpu.regs[4] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2784 (SB_DFFE): \sys1.cpu.regs[9] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2785 (SB_DFFE): \sys1.cpu.regs[9] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2786 (SB_DFFE): \sys1.cpu.regs[9] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2787 (SB_DFFE): \sys1.cpu.regs[9] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2788 (SB_DFFE): \sys1.cpu.regs[9] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2789 (SB_DFFE): \sys1.cpu.regs[9] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2790 (SB_DFFE): \sys1.cpu.regs[9] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2791 (SB_DFFE): \sys1.cpu.regs[9] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2792 (SB_DFFE): \sys1.cpu.regs[9] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2794 (SB_DFFE): \cnt [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2127 (SB_DFFE): \sys1.cpu.regs[5] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2795 (SB_DFFE): \cnt [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2796 (SB_DFFE): \cnt [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2797 (SB_DFFE): \cnt [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2798 (SB_DFFE): \cnt [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2799 (SB_DFFE): \cnt [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2793 (SB_DFFE): \cnt [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2801 (SB_DFFE): \cnt [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2802 (SB_DFFE): \cnt [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2803 (SB_DFFE): \cnt [10] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2804 (SB_DFFE): \cnt [11] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2805 (SB_DFFE): \cnt [12] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2806 (SB_DFFE): \cnt [13] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2807 (SB_DFFE): \cnt [14] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2808 (SB_DFFE): \cnt [15] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2666 (SB_DFFE): \sys1.cpu.regs[3] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2667 (SB_DFFE): \sys1.cpu.regs[3] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2669 (SB_DFFE): \sys1.cpu.regs[3] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2671 (SB_DFFE): \sys1.cpu.regs[3] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2673 (SB_DFFE): \sys1.cpu.regs[3] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2675 (SB_DFFE): \sys1.cpu.regs[3] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2677 (SB_DFFE): \sys1.cpu.regs[3] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2783 (SB_DFFE): \sys1.cpu.regs[9] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2083 (SB_DFFE): \sys1.cpu.regs[4] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3167 (SB_DFF): \sys1.tcount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3168 (SB_DFF): \sys1.tcount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3169 (SB_DFF): \sys1.tcount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3170 (SB_DFF): \sys1.tcount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3171 (SB_DFF): \sys1.tcount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3172 (SB_DFF): \sys1.tcount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3173 (SB_DFF): \sys1.tcount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3174 (SB_DFF): \sys1.tcount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3175 (SB_DFF): \sys1.tcount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3176 (SB_DFF): \sys1.tcount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3177 (SB_DFF): \sys1.tcount [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2085 (SB_DFFE): \sys1.cpu.regs[4] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3212 (SB_DFFE): \sys1.gpout [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3216 (SB_DFFE): \sys1.gpout [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3203 (SB_DFFE): \sys1.gpout [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3208 (SB_DFFE): \sys1.gpout [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3181 (SB_DFF): \sys1.tcount [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3182 (SB_DFF): \sys1.tcount [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3183 (SB_DFF): \sys1.tcount [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3184 (SB_DFF): \sys1.tcount [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3185 (SB_DFF): \sys1.tcount [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3186 (SB_DFF): \sys1.tcount [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3188 (SB_DFF): \sys1.tcount [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3210 (SB_DFFE): \sys1.gpout [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3190 (SB_DFF): \sys1.tcount [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3178 (SB_DFF): \sys1.tcount [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3192 (SB_DFF): \sys1.tcount [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3214 (SB_DFFE): \sys1.gpout [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3194 (SB_DFF): \sys1.tcount [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3179 (SB_DFF): \sys1.tcount [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3196 (SB_DFF): \sys1.tcount [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3166 (SB_DFF): \sys1.tcount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3218 (SB_DFFE): \sys1.gpout [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3199 (SB_DFFE): \sys1.gpout [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3220 (SB_DFFE): \sys1.gpout [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3201 (SB_DFFE): \sys1.gpout [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3222 (SB_DFFE): \sys1.gpout [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3180 (SB_DFF): \sys1.tcount [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3224 (SB_DFFE): \sys1.gpout [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3205 (SB_DFFE): \sys1.gpout [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3206 (SB_DFFE): \sys1.gpout [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3207 (SB_DFFE): \sys1.gpout [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3189 (SB_DFF): \sys1.tcount [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3209 (SB_DFFE): \sys1.gpout [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3191 (SB_DFF): \sys1.tcount [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3211 (SB_DFFE): \sys1.gpout [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3193 (SB_DFF): \sys1.tcount [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3213 (SB_DFFE): \sys1.gpout [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3195 (SB_DFF): \sys1.tcount [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3215 (SB_DFFE): \sys1.gpout [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3197 (SB_DFF): \sys1.tcount [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3217 (SB_DFFE): \sys1.gpout [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3200 (SB_DFFE): \sys1.gpout [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3219 (SB_DFFE): \sys1.gpout [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3202 (SB_DFFE): \sys1.gpout [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3221 (SB_DFFE): \sys1.gpout [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3204 (SB_DFFE): \sys1.gpout [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3223 (SB_DFFE): \sys1.gpout [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3226 (SB_DFFE): \sys1.gpout [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3227 (SB_DFFE): \sys1.gpout [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3228 (SB_DFFE): \sys1.gpout [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3229 (SB_DFFE): \sys1.gpout [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3198 (SB_DFFE): \sys1.gpout [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2665 (SB_DFFE): \sys1.cpu.regs[3] [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$3245 (SB_DFFER): \sys1.irqen [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2044 (SB_DFFE): \sys1.cpu.regs[2] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2095 (SB_DFFE): \sys1.cpu.regs[4] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3906 (SB_DFFE): \sys1.cpu.regs[14] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3900 (SB_DFFE): \sys1.cpu.regs[14] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3901 (SB_DFFE): \sys1.cpu.regs[14] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3902 (SB_DFFE): \sys1.cpu.regs[14] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3903 (SB_DFFE): \sys1.cpu.regs[14] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3904 (SB_DFFE): \sys1.cpu.regs[14] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2017 (SB_DFFE): \sys1.cpu.regs[1] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3905 (SB_DFFE): \sys1.cpu.regs[14] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3907 (SB_DFFE): \sys1.cpu.regs[14] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3908 (SB_DFFE): \sys1.cpu.regs[14] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3909 (SB_DFFE): \sys1.cpu.regs[14] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3910 (SB_DFFE): \sys1.cpu.regs[14] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3911 (SB_DFFE): \sys1.cpu.regs[14] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3912 (SB_DFFE): \sys1.cpu.regs[14] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3913 (SB_DFFE): \sys1.cpu.regs[14] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3914 (SB_DFFE): \sys1.cpu.regs[14] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3915 (SB_DFFE): \sys1.cpu.regs[14] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3916 (SB_DFFE): \sys1.cpu.regs[14] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3917 (SB_DFFE): \sys1.cpu.regs[14] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3918 (SB_DFFE): \sys1.cpu.regs[14] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3919 (SB_DFFE): \sys1.cpu.regs[14] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3920 (SB_DFFE): \sys1.cpu.regs[14] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3921 (SB_DFFE): \sys1.cpu.regs[14] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3922 (SB_DFFE): \sys1.cpu.regs[14] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3923 (SB_DFFE): \sys1.cpu.regs[14] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3924 (SB_DFFE): \sys1.cpu.regs[14] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3925 (SB_DFFE): \sys1.cpu.regs[14] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3926 (SB_DFFE): \sys1.cpu.regs[14] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3927 (SB_DFFE): \sys1.cpu.regs[14] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3928 (SB_DFFE): \sys1.cpu.regs[14] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3929 (SB_DFFE): \sys1.cpu.regs[14] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2018 (SB_DFFE): \sys1.cpu.regs[1] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3930 (SB_DFFE): \sys1.cpu.regs[14] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3968 (SB_DFFE): \sys1.cpu.regs[0] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3969 (SB_DFFE): \sys1.cpu.regs[0] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3970 (SB_DFFE): \sys1.cpu.regs[0] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3971 (SB_DFFE): \sys1.cpu.regs[0] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3972 (SB_DFFE): \sys1.cpu.regs[0] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3973 (SB_DFFE): \sys1.cpu.regs[0] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3974 (SB_DFFE): \sys1.cpu.regs[0] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3975 (SB_DFFE): \sys1.cpu.regs[0] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3976 (SB_DFFE): \sys1.cpu.regs[0] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3977 (SB_DFFE): \sys1.cpu.regs[0] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3978 (SB_DFFE): \sys1.cpu.regs[0] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3979 (SB_DFFE): \sys1.cpu.regs[0] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3980 (SB_DFFE): \sys1.cpu.regs[0] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3981 (SB_DFFE): \sys1.cpu.regs[0] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3982 (SB_DFFE): \sys1.cpu.regs[0] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3983 (SB_DFFE): \sys1.cpu.regs[0] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3984 (SB_DFFE): \sys1.cpu.regs[0] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3985 (SB_DFFE): \sys1.cpu.regs[0] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3986 (SB_DFFE): \sys1.cpu.regs[0] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3987 (SB_DFFE): \sys1.cpu.regs[0] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3988 (SB_DFFE): \sys1.cpu.regs[0] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3989 (SB_DFFE): \sys1.cpu.regs[0] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3990 (SB_DFFE): \sys1.cpu.regs[0] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3991 (SB_DFFE): \sys1.cpu.regs[0] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3992 (SB_DFFE): \sys1.cpu.regs[0] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3993 (SB_DFFE): \sys1.cpu.regs[0] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3994 (SB_DFFE): \sys1.cpu.regs[0] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3995 (SB_DFFE): \sys1.cpu.regs[0] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3996 (SB_DFFE): \sys1.cpu.regs[0] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3997 (SB_DFFE): \sys1.cpu.regs[0] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2043 (SB_DFFE): \sys1.cpu.regs[2] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3998 (SB_DFFE): \sys1.cpu.regs[0] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2001 (SB_DFFE): \sys1.cpu.regs[1] [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4215 (SB_DFFR): \sys1.cpu.opvalid = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2050 (SB_DFFE): \sys1.cpu.regs[2] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6507 (SB_DFF): \sys1.uart2.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6508 (SB_DFF): \sys1.uart2.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6509 (SB_DFF): \sys1.uart2.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6510 (SB_DFF): \sys1.uart2.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6511 (SB_DFF): \sys1.uart2.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6512 (SB_DFF): \sys1.uart2.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6513 (SB_DFF): \sys1.uart2.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6514 (SB_DFF): \sys1.uart2.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6515 (SB_DFF): \sys1.uart2.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6516 (SB_DFF): \sys1.uart2.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6506 (SB_DFF): \sys1.uart2.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6518 (SB_DFF): \sys1.uart2.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6517 (SB_DFF): \sys1.uart2.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6523 (SB_DFFE): \sys1.uart2.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6527 (SB_DFF): \sys1.uart2.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6528 (SB_DFF): \sys1.uart2.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6529 (SB_DFF): \sys1.uart2.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6530 (SB_DFF): \sys1.uart2.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6531 (SB_DFF): \sys1.uart2.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6532 (SB_DFF): \sys1.uart2.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6533 (SB_DFF): \sys1.uart2.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6534 (SB_DFF): \sys1.uart2.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6535 (SB_DFF): \sys1.uart2.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6536 (SB_DFF): \sys1.uart2.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6526 (SB_DFF): \sys1.uart2.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6537 (SB_DFF): \sys1.uart2.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6540 (SB_DFFE): \sys1.uart2.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6541 (SB_DFFE): \sys1.uart2.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6539 (SB_DFFE): \sys1.uart2.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6542 (SB_DFFE): \sys1.uart2.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6561 (SB_DFFE): \sys1.uart2.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6562 (SB_DFFE): \sys1.uart2.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6578 (SB_DFFE): \sys1.cpu.regs[10] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6579 (SB_DFFE): \sys1.cpu.regs[10] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6580 (SB_DFFE): \sys1.cpu.regs[10] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6581 (SB_DFFE): \sys1.cpu.regs[10] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6582 (SB_DFFE): \sys1.cpu.regs[10] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6583 (SB_DFFE): \sys1.cpu.regs[10] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6584 (SB_DFFE): \sys1.cpu.regs[10] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6585 (SB_DFFE): \sys1.cpu.regs[10] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6586 (SB_DFFE): \sys1.cpu.regs[10] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6587 (SB_DFFE): \sys1.cpu.regs[10] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6588 (SB_DFFE): \sys1.cpu.regs[10] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6589 (SB_DFFE): \sys1.cpu.regs[10] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6590 (SB_DFFE): \sys1.cpu.regs[10] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6591 (SB_DFFE): \sys1.cpu.regs[10] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6592 (SB_DFFE): \sys1.cpu.regs[10] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6593 (SB_DFFE): \sys1.cpu.regs[10] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6594 (SB_DFFE): \sys1.cpu.regs[10] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6595 (SB_DFFE): \sys1.cpu.regs[10] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6596 (SB_DFFE): \sys1.cpu.regs[10] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6597 (SB_DFFE): \sys1.cpu.regs[10] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6598 (SB_DFFE): \sys1.cpu.regs[10] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6599 (SB_DFFE): \sys1.cpu.regs[10] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6600 (SB_DFFE): \sys1.cpu.regs[10] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6601 (SB_DFFE): \sys1.cpu.regs[10] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6602 (SB_DFFE): \sys1.cpu.regs[10] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6603 (SB_DFFE): \sys1.cpu.regs[10] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6604 (SB_DFFE): \sys1.cpu.regs[10] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6605 (SB_DFFE): \sys1.cpu.regs[10] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6606 (SB_DFFE): \sys1.cpu.regs[10] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6607 (SB_DFFE): \sys1.cpu.regs[10] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2038 (SB_DFFE): \sys1.cpu.regs[2] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6608 (SB_DFFE): \sys1.cpu.regs[10] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7049 (SB_DFFE): \sys1.cpu.regs[6] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7050 (SB_DFFE): \sys1.cpu.regs[6] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7051 (SB_DFFE): \sys1.cpu.regs[6] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7052 (SB_DFFE): \sys1.cpu.regs[6] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7053 (SB_DFFE): \sys1.cpu.regs[6] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7054 (SB_DFFE): \sys1.cpu.regs[6] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7055 (SB_DFFE): \sys1.cpu.regs[6] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7056 (SB_DFFE): \sys1.cpu.regs[6] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7057 (SB_DFFE): \sys1.cpu.regs[6] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7058 (SB_DFFE): \sys1.cpu.regs[6] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7059 (SB_DFFE): \sys1.cpu.regs[6] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7060 (SB_DFFE): \sys1.cpu.regs[6] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7061 (SB_DFFE): \sys1.cpu.regs[6] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7062 (SB_DFFE): \sys1.cpu.regs[6] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7063 (SB_DFFE): \sys1.cpu.regs[6] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7064 (SB_DFFE): \sys1.cpu.regs[6] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7065 (SB_DFFE): \sys1.cpu.regs[6] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7066 (SB_DFFE): \sys1.cpu.regs[6] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7067 (SB_DFFE): \sys1.cpu.regs[6] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7068 (SB_DFFE): \sys1.cpu.regs[6] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7069 (SB_DFFE): \sys1.cpu.regs[6] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7070 (SB_DFFE): \sys1.cpu.regs[6] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7071 (SB_DFFE): \sys1.cpu.regs[6] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7072 (SB_DFFE): \sys1.cpu.regs[6] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7073 (SB_DFFE): \sys1.cpu.regs[6] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7074 (SB_DFFE): \sys1.cpu.regs[6] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7075 (SB_DFFE): \sys1.cpu.regs[6] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7076 (SB_DFFE): \sys1.cpu.regs[6] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7077 (SB_DFFE): \sys1.cpu.regs[6] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7078 (SB_DFFE): \sys1.cpu.regs[6] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2002 (SB_DFFE): \sys1.cpu.regs[1] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7079 (SB_DFFE): \sys1.cpu.regs[6] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7180 (SB_DFF): \sys1.spi0.divcnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7181 (SB_DFF): \sys1.spi0.divcnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7182 (SB_DFF): \sys1.spi0.divcnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7183 (SB_DFF): \sys1.spi0.divcnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7184 (SB_DFF): \sys1.spi0.divcnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7185 (SB_DFF): \sys1.spi0.divcnt [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2042 (SB_DFFE): \sys1.cpu.regs[2] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7187 (SB_DFFE): \sys1.spi0.sck = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7186 (SB_DFF): \sys1.spi0.divcnt [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7189 (SB_DFFE): \sys1.spi0.bitcnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7190 (SB_DFFE): \sys1.spi0.bitcnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7191 (SB_DFFE): \sys1.spi0.bitcnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7192 (SB_DFFE): \sys1.spi0.bitcnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7188 (SB_DFFE): \sys1.spi0.bitcnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7194 (SB_DFF): \sys1.spi0.sin = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7193 (SB_DFFE): \sys1.spi0.bitcnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2041 (SB_DFFE): \sys1.cpu.regs[2] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7646 (SB_DFFE): \sys1.uart0.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7647 (SB_DFFE): \sys1.uart0.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7648 (SB_DFFE): \sys1.uart0.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7649 (SB_DFFE): \sys1.uart0.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7650 (SB_DFFE): \sys1.uart0.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7651 (SB_DFFE): \sys1.uart0.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7652 (SB_DFFE): \sys1.uart0.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7653 (SB_DFFE): \sys1.uart0.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7654 (SB_DFFE): \sys1.uart0.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7655 (SB_DFFE): \sys1.uart0.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7645 (SB_DFFE): \sys1.uart0.divider [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7656 (SB_DFFE): \sys1.uart0.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7658 (SB_DFF): \sys1.uart0.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7659 (SB_DFF): \sys1.uart0.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7660 (SB_DFF): \sys1.uart0.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7661 (SB_DFF): \sys1.uart0.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7662 (SB_DFF): \sys1.uart0.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7663 (SB_DFF): \sys1.uart0.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7664 (SB_DFF): \sys1.uart0.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7665 (SB_DFF): \sys1.uart0.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7666 (SB_DFF): \sys1.uart0.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7667 (SB_DFF): \sys1.uart0.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7657 (SB_DFF): \sys1.uart0.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7669 (SB_DFF): \sys1.uart0.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7668 (SB_DFF): \sys1.uart0.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7675 (SB_DFF): \sys1.uart0.shtx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7676 (SB_DFF): \sys1.uart0.shtx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7677 (SB_DFF): \sys1.uart0.shtx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7678 (SB_DFF): \sys1.uart0.shtx [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7679 (SB_DFF): \sys1.uart0.shtx [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7680 (SB_DFF): \sys1.uart0.shtx [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7681 (SB_DFF): \sys1.uart0.shtx [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7674 (SB_DFF): \sys1.uart0.shtx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7682 (SB_DFF): \sys1.uart0.shtx [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7691 (SB_DFFE): \sys1.uart0.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7692 (SB_DFF): \sys1.uart0.rrxd [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7693 (SB_DFF): \sys1.uart0.rrxd [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7695 (SB_DFF): \sys1.uart0.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7696 (SB_DFF): \sys1.uart0.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7697 (SB_DFF): \sys1.uart0.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7698 (SB_DFF): \sys1.uart0.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7699 (SB_DFF): \sys1.uart0.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7700 (SB_DFF): \sys1.uart0.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7701 (SB_DFF): \sys1.uart0.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7702 (SB_DFF): \sys1.uart0.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7703 (SB_DFF): \sys1.uart0.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7704 (SB_DFF): \sys1.uart0.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7694 (SB_DFF): \sys1.uart0.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7705 (SB_DFF): \sys1.uart0.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7708 (SB_DFFE): \sys1.uart0.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7709 (SB_DFFE): \sys1.uart0.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7707 (SB_DFFE): \sys1.uart0.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7710 (SB_DFFE): \sys1.uart0.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7729 (SB_DFFE): \sys1.uart0.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7730 (SB_DFFE): \sys1.uart0.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7860 (SB_DFFE): \sys1.cpu.regs[13] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7861 (SB_DFFE): \sys1.cpu.regs[13] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7862 (SB_DFFE): \sys1.cpu.regs[13] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7863 (SB_DFFE): \sys1.cpu.regs[13] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7864 (SB_DFFE): \sys1.cpu.regs[13] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7865 (SB_DFFE): \sys1.cpu.regs[13] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7866 (SB_DFFE): \sys1.cpu.regs[13] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7867 (SB_DFFE): \sys1.cpu.regs[13] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7868 (SB_DFFE): \sys1.cpu.regs[13] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7869 (SB_DFFE): \sys1.cpu.regs[13] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7870 (SB_DFFE): \sys1.cpu.regs[13] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7871 (SB_DFFE): \sys1.cpu.regs[13] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7872 (SB_DFFE): \sys1.cpu.regs[13] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7873 (SB_DFFE): \sys1.cpu.regs[13] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7874 (SB_DFFE): \sys1.cpu.regs[13] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7875 (SB_DFFE): \sys1.cpu.regs[13] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7876 (SB_DFFE): \sys1.cpu.regs[13] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7877 (SB_DFFE): \sys1.cpu.regs[13] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7878 (SB_DFFE): \sys1.cpu.regs[13] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7879 (SB_DFFE): \sys1.cpu.regs[13] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7880 (SB_DFFE): \sys1.cpu.regs[13] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7881 (SB_DFFE): \sys1.cpu.regs[13] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7882 (SB_DFFE): \sys1.cpu.regs[13] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7883 (SB_DFFE): \sys1.cpu.regs[13] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7884 (SB_DFFE): \sys1.cpu.regs[13] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7885 (SB_DFFE): \sys1.cpu.regs[13] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7886 (SB_DFFE): \sys1.cpu.regs[13] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7887 (SB_DFFE): \sys1.cpu.regs[13] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7888 (SB_DFFE): \sys1.cpu.regs[13] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7889 (SB_DFFE): \sys1.cpu.regs[13] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2699 (SB_DFFE): \sys1.cpu.regs[8] [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4338 (SB_DFFR): \sys1.cpu.mmode = 0

2.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in main.
  Merging $auto$simplemap.cc:277:simplemap_mux$6324 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3830 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6324 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3999 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6325 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2944 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6326 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2945 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6327 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2946 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6328 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2947 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6329 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2948 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6324 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2943 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6327 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3203 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6323 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3199 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6325 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3201 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6329 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3205 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6324 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3200 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6326 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3202 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6328 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3204 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6323 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3231 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6322 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3198 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6324 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3232 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6325 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3233 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6326 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3234 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6327 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3235 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6328 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3236 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6329 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3237 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6325 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3831 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6326 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3832 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6327 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3833 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6328 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3834 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6329 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3835 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6325 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$4000 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6326 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$4001 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6327 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$4002 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6328 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$4003 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6329 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$4004 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6325 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$4185 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6326 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$4186 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6327 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$4187 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6328 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$4188 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6329 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$4189 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6825 (A=1'0, B=$auto$wreduce.cc:460:run$1169 [1], S=$auto$simplemap.cc:168:logic_reduce$6882) into $auto$simplemap.cc:420:simplemap_dff$6507 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6826 (A=1'0, B=$auto$wreduce.cc:460:run$1169 [2], S=$auto$simplemap.cc:168:logic_reduce$6882) into $auto$simplemap.cc:420:simplemap_dff$6508 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6827 (A=1'0, B=$auto$wreduce.cc:460:run$1169 [3], S=$auto$simplemap.cc:168:logic_reduce$6882) into $auto$simplemap.cc:420:simplemap_dff$6509 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6828 (A=1'0, B=$auto$wreduce.cc:460:run$1169 [4], S=$auto$simplemap.cc:168:logic_reduce$6882) into $auto$simplemap.cc:420:simplemap_dff$6510 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6829 (A=1'0, B=$auto$wreduce.cc:460:run$1169 [5], S=$auto$simplemap.cc:168:logic_reduce$6882) into $auto$simplemap.cc:420:simplemap_dff$6511 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6830 (A=1'0, B=$auto$wreduce.cc:460:run$1169 [6], S=$auto$simplemap.cc:168:logic_reduce$6882) into $auto$simplemap.cc:420:simplemap_dff$6512 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6831 (A=1'0, B=$auto$wreduce.cc:460:run$1169 [7], S=$auto$simplemap.cc:168:logic_reduce$6882) into $auto$simplemap.cc:420:simplemap_dff$6513 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6832 (A=1'0, B=$auto$wreduce.cc:460:run$1169 [8], S=$auto$simplemap.cc:168:logic_reduce$6882) into $auto$simplemap.cc:420:simplemap_dff$6514 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6833 (A=1'0, B=$auto$wreduce.cc:460:run$1169 [9], S=$auto$simplemap.cc:168:logic_reduce$6882) into $auto$simplemap.cc:420:simplemap_dff$6515 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6834 (A=1'0, B=$auto$wreduce.cc:460:run$1169 [10], S=$auto$simplemap.cc:168:logic_reduce$6882) into $auto$simplemap.cc:420:simplemap_dff$6516 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6824 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$16840, S=$auto$simplemap.cc:168:logic_reduce$6882) into $auto$simplemap.cc:420:simplemap_dff$6506 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6835 (A=1'0, B=$auto$wreduce.cc:460:run$1169 [11], S=$auto$simplemap.cc:168:logic_reduce$6882) into $auto$simplemap.cc:420:simplemap_dff$6517 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6741 (A=1'0, B=$techmap\sys1.uart2.$sub$uart2.v:91$713_Y [1], S=$auto$simplemap.cc:168:logic_reduce$6766) into $auto$simplemap.cc:420:simplemap_dff$6527 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6742 (A=1'0, B=$techmap\sys1.uart2.$sub$uart2.v:91$713_Y [2], S=$auto$simplemap.cc:168:logic_reduce$6766) into $auto$simplemap.cc:420:simplemap_dff$6528 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6743 (A=1'0, B=$techmap\sys1.uart2.$sub$uart2.v:91$713_Y [3], S=$auto$simplemap.cc:168:logic_reduce$6766) into $auto$simplemap.cc:420:simplemap_dff$6529 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6744 (A=1'0, B=$techmap\sys1.uart2.$sub$uart2.v:91$713_Y [4], S=$auto$simplemap.cc:168:logic_reduce$6766) into $auto$simplemap.cc:420:simplemap_dff$6530 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6745 (A=1'0, B=$techmap\sys1.uart2.$sub$uart2.v:91$713_Y [5], S=$auto$simplemap.cc:168:logic_reduce$6766) into $auto$simplemap.cc:420:simplemap_dff$6531 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6746 (A=1'0, B=$techmap\sys1.uart2.$sub$uart2.v:91$713_Y [6], S=$auto$simplemap.cc:168:logic_reduce$6766) into $auto$simplemap.cc:420:simplemap_dff$6532 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6747 (A=1'0, B=$techmap\sys1.uart2.$sub$uart2.v:91$713_Y [7], S=$auto$simplemap.cc:168:logic_reduce$6766) into $auto$simplemap.cc:420:simplemap_dff$6533 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6748 (A=1'0, B=$techmap\sys1.uart2.$sub$uart2.v:91$713_Y [8], S=$auto$simplemap.cc:168:logic_reduce$6766) into $auto$simplemap.cc:420:simplemap_dff$6534 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6749 (A=1'0, B=$techmap\sys1.uart2.$sub$uart2.v:91$713_Y [9], S=$auto$simplemap.cc:168:logic_reduce$6766) into $auto$simplemap.cc:420:simplemap_dff$6535 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6750 (A=1'0, B=$techmap\sys1.uart2.$sub$uart2.v:91$713_Y [10], S=$auto$simplemap.cc:168:logic_reduce$6766) into $auto$simplemap.cc:420:simplemap_dff$6536 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6740 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$17011, S=$auto$simplemap.cc:168:logic_reduce$6766) into $auto$simplemap.cc:420:simplemap_dff$6526 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6751 (A=1'0, B=$techmap\sys1.uart2.$sub$uart2.v:91$713_Y [11], S=$auto$simplemap.cc:168:logic_reduce$6766) into $auto$simplemap.cc:420:simplemap_dff$6537 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7235 (A=$techmap\sys1.spi0.$not$spi.v:38$354_Y, B=1'0, S=\sys1.spi0.wr) into $auto$simplemap.cc:420:simplemap_dff$7187 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6323 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7646 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6324 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7647 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6325 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7648 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6326 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7649 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6327 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7650 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6328 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7651 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6329 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7652 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6322 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7645 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7949 (A=$techmap\sys1.uart0.$ternary$uart.v:42$741_Y [1], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$738_Y) into $auto$simplemap.cc:420:simplemap_dff$7658 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7950 (A=$techmap\sys1.uart0.$ternary$uart.v:42$741_Y [2], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$738_Y) into $auto$simplemap.cc:420:simplemap_dff$7659 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7951 (A=$techmap\sys1.uart0.$ternary$uart.v:42$741_Y [3], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$738_Y) into $auto$simplemap.cc:420:simplemap_dff$7660 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7952 (A=$techmap\sys1.uart0.$ternary$uart.v:42$741_Y [4], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$738_Y) into $auto$simplemap.cc:420:simplemap_dff$7661 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7953 (A=$techmap\sys1.uart0.$ternary$uart.v:42$741_Y [5], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$738_Y) into $auto$simplemap.cc:420:simplemap_dff$7662 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7954 (A=$techmap\sys1.uart0.$ternary$uart.v:42$741_Y [6], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$738_Y) into $auto$simplemap.cc:420:simplemap_dff$7663 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7955 (A=$techmap\sys1.uart0.$ternary$uart.v:42$741_Y [7], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$738_Y) into $auto$simplemap.cc:420:simplemap_dff$7664 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7956 (A=$techmap\sys1.uart0.$ternary$uart.v:42$741_Y [8], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$738_Y) into $auto$simplemap.cc:420:simplemap_dff$7665 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7957 (A=$techmap\sys1.uart0.$ternary$uart.v:42$741_Y [9], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$738_Y) into $auto$simplemap.cc:420:simplemap_dff$7666 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7958 (A=$techmap\sys1.uart0.$ternary$uart.v:42$741_Y [10], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$738_Y) into $auto$simplemap.cc:420:simplemap_dff$7667 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7948 (A=$techmap\sys1.uart0.$ternary$uart.v:42$741_Y [0], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$738_Y) into $auto$simplemap.cc:420:simplemap_dff$7657 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7959 (A=$techmap\sys1.uart0.$ternary$uart.v:42$741_Y [11], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$738_Y) into $auto$simplemap.cc:420:simplemap_dff$7668 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6323 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7684 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6324 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7685 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6325 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7686 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6326 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7687 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6327 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7688 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6328 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7689 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6322 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7683 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6329 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7690 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7798 (A=\sys1.uart0.dv, B=1'0, S=\sys1.uart0.rd) into $auto$simplemap.cc:420:simplemap_dff$7729 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6322 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3230 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6324 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$4184 (SB_DFFE).

2.40. Executing ICE40_OPT pass (performing simple optimizations).

2.40.1. Running ICE40 specific optimizations.

2.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 185 cells.

2.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 40 unused cells and 5821 unused wires.

2.40.6. Rerunning OPT passes. (Removed registers in this run.)

2.40.7. Running ICE40 specific optimizations.

2.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.40.12. Rerunning OPT passes. (Removed registers in this run.)

2.40.13. Running ICE40 specific optimizations.

2.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.40.18. Finished OPT passes. (There is nothing left to do.)

2.41. Executing TECHMAP pass (map to technology primitives).

2.41.1. Executing Verilog-2005 frontend: C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/ice40/latches_map.v
Parsing Verilog input from `C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.41.2. Continuing TECHMAP pass.
No more expansions possible.

2.42. Executing ABC pass (technology mapping using ABC).

2.42.1. Extracting gate netlist of module `\main' to `<abc-temp-dir>/input.blif'..
Extracted 3620 gates and 4862 wires to a netlist network with 1240 inputs and 553 outputs.

2.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1052.
ABC: Participating nodes from both networks       =    2206.
ABC: Participating nodes from the first network   =    1053. (  45.54 % of nodes)
ABC: Participating nodes from the second network  =    1153. (  49.87 % of nodes)
ABC: Node pairs (any polarity)                    =    1052. (  45.50 % of names can be moved)
ABC: Node pairs (same polarity)                   =     739. (  31.96 % of names can be moved)
ABC: Total runtime =     0.27 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2311
ABC RESULTS:        internal signals:     3069
ABC RESULTS:           input signals:     1240
ABC RESULTS:          output signals:      553
Removing temp directory.

2.43. Executing ICE40_WRAPCARRY pass (wrap carries).

2.44. Executing TECHMAP pass (map to technology primitives).

2.44.1. Executing Verilog-2005 frontend: C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.44.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 167 unused cells and 2205 unused wires.

2.45. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     2550
  1-LUT               66
  2-LUT              315
  3-LUT              922
  4-LUT             1247
  with \SB_CARRY     220

Eliminating LUTs.
Number of LUTs:     2550
  1-LUT               66
  2-LUT              315
  3-LUT              922
  4-LUT             1247
  with \SB_CARRY     220

Combining LUTs.
Number of LUTs:     2513
  1-LUT               39
  2-LUT              303
  3-LUT              918
  4-LUT             1253
  with \SB_CARRY     220

Eliminated 0 LUTs.
Combined 37 LUTs.

2.46. Executing TECHMAP pass (map to technology primitives).

2.46.1. Executing Verilog-2005 frontend: C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\TP1-1\DOWNLO~1\PRUEBA~1\PRUEBA~1\tools\TOOLCH~2\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.46.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110101010010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011110010001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000011001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011010011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110010100101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010010111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100100010000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010000001111 for cells of type $lut.
No more expansions possible.
Removed 0 unused cells and 5038 unused wires.

2.47. Executing AUTONAME pass.
Renamed 44008 objects in module main (79 iterations).

2.48. Executing HIERARCHY pass (managing design hierarchy).

2.48.1. Analyzing design hierarchy..
Top module:  \main

2.48.2. Analyzing design hierarchy..
Top module:  \main
Removed 0 unused modules.

2.49. Printing statistics.

=== main ===

   Number of wires:               2386
   Number of wire bits:           5065
   Number of public wires:        2386
   Number of public wire bits:    5065
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3850
     SB_CARRY                      334
     SB_DFF                        138
     SB_DFFE                       695
     SB_DFFER                       32
     SB_DFFESR                      52
     SB_DFFR                        33
     SB_DFFSR                       36
     SB_LUT4                      2513
     SB_PLL40_CORE                   1
     SB_RAM40_4KNRNW                16

2.50. Executing CHECK pass (checking for obvious problems).
checking module main..
found and reported 0 problems.

-- Writing to `main.json' using backend `json' --

3. Executing JSON backend.

Warnings: 12 unique messages, 27 total
End of script. Logfile hash: e9f60b53e9
Yosys 0.9+932 (git sha1 UNKNOWN, x86_64-w64-mingw32-g++ 7.3-posix -O3 -DNDEBUG)
Time spent: 1% 28x opt_expr (0 sec), 1% 27x opt_clean (0 sec), ...
